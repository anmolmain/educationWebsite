{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\educationWebsite\\\\education-website\\\\src\\\\HomePage\\\\Navbar\\\\NavbarRouting\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport NavBar from '../Navbar';\nimport 'codemirror/lib/codemirror.css'; // Import the CodeMirror CSS\nimport 'codemirror/theme/material.css'; // Import a CodeMirror theme\nimport 'codemirror/mode/javascript/javascript'; // Import the JavaScript mode for syntax highlighting\nimport './CodeEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const CodeMirror = require('codemirror'); // Use the CodeMirror instance\n      const editor = CodeMirror(editorRef.current, {\n        mode: 'javascript',\n        theme: 'material',\n        // Change the theme as desired\n        lineNumbers: true\n      });\n\n      // Event listener for executing code (you can modify this)\n      // For example, you can use a button to execute code\n      editor.on('keyup', (cm, event) => {\n        if (event.key === 'Enter' && event.ctrlKey) {\n          executeCode(cm.getValue());\n        }\n      });\n\n      // Define the executeCode function\n      const executeCode = code => {\n        try {\n          const result = eval(code);\n          console.log('Result:', result);\n          // You can display the result or handle it as needed\n        } catch (error) {\n          console.error('Error:', error);\n          // Handle the error as needed\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codeEditormainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      className: \"codeEditor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useEffect","useRef","NavBar","jsxDEV","_jsxDEV","CodeEditor","_s","editorRef","current","CodeMirror","require","editor","mode","theme","lineNumbers","on","cm","event","key","ctrlKey","executeCode","getValue","code","result","eval","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/Projects/educationWebsite/education-website/src/HomePage/Navbar/NavbarRouting/CodeEditor.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport NavBar from '../Navbar';\r\nimport 'codemirror/lib/codemirror.css'; // Import the CodeMirror CSS\r\nimport 'codemirror/theme/material.css'; // Import a CodeMirror theme\r\nimport 'codemirror/mode/javascript/javascript'; // Import the JavaScript mode for syntax highlighting\r\nimport './CodeEditor.css';\r\n\r\nconst CodeEditor = () => {\r\n  const editorRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current) {\r\n      const CodeMirror = require('codemirror'); // Use the CodeMirror instance\r\n      const editor = CodeMirror(editorRef.current, {\r\n        mode: 'javascript',\r\n        theme: 'material', // Change the theme as desired\r\n        lineNumbers: true,\r\n      });\r\n\r\n      // Event listener for executing code (you can modify this)\r\n      // For example, you can use a button to execute code\r\n      editor.on('keyup', (cm, event) => {\r\n        if (event.key === 'Enter' && event.ctrlKey) {\r\n          executeCode(cm.getValue());\r\n        }\r\n      });\r\n\r\n      // Define the executeCode function\r\n      const executeCode = (code) => {\r\n        try {\r\n          const result = eval(code);\r\n          console.log('Result:', result);\r\n          // You can display the result or handle it as needed\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          // Handle the error as needed\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"codeEditormainDiv\">\r\n      <NavBar />\r\n      <div ref={editorRef} className=\"codeEditor\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,+BAA+B,CAAC,CAAC;AACxC,OAAO,+BAA+B,CAAC,CAAC;AACxC,OAAO,uCAAuC,CAAC,CAAC;AAChD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;MAC1C,MAAMC,MAAM,GAAGF,UAAU,CAACF,SAAS,CAACC,OAAO,EAAE;QAC3CI,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE,UAAU;QAAE;QACnBC,WAAW,EAAE;MACf,CAAC,CAAC;;MAEF;MACA;MACAH,MAAM,CAACI,EAAE,CAAC,OAAO,EAAE,CAACC,EAAE,EAAEC,KAAK,KAAK;QAChC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,IAAID,KAAK,CAACE,OAAO,EAAE;UAC1CC,WAAW,CAACJ,EAAE,CAACK,QAAQ,CAAC,CAAC,CAAC;QAC5B;MACF,CAAC,CAAC;;MAEF;MACA,MAAMD,WAAW,GAAIE,IAAI,IAAK;QAC5B,IAAI;UACF,MAAMC,MAAM,GAAGC,IAAI,CAACF,IAAI,CAAC;UACzBG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;UAC9B;QACF,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9B;QACF;MACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCzB,OAAA,CAACF,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV7B,OAAA;MAAK8B,GAAG,EAAE3B,SAAU;MAACqB,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxCID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}