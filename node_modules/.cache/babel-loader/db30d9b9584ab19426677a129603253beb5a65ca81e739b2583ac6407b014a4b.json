{"ast":null,"code":"exp;\nvar javaScriptData = [{\n  \"topic_name\": \"Variables and Data Types\",\n  \"topic_description\": \"JavaScript variables can store data of different types, including numbers, strings, and objects.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Declaring Variables\",\n    \"example_code\": \"let variableName = 'Hello, World!';\"\n  }, {\n    \"subtopic_name\": \"Data Types\",\n    \"example_code\": \"let num = 42;\\nlet str = 'Hello';\\nlet bool = true;\"\n  }, {\n    \"subtopic_name\": \"Type Conversion\",\n    \"example_code\": \"let numStr = '42';\\nlet num = parseInt(numStr);\"\n  }]\n}, {\n  \"topic_name\": \"Functions\",\n  \"topic_description\": \"Functions in JavaScript are reusable blocks of code that can take parameters and return values.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Defining Functions\",\n    \"example_code\": \"function functionName() {\\n  // Code here\\n}\"\n  }, {\n    \"subtopic_name\": \"Function Parameters\",\n    \"example_code\": \"function greet(name) {\\n  return 'Hello, ' + name;\\n}\"\n  }, {\n    \"subtopic_name\": \"Arrow Functions\",\n    \"example_code\": \"const add = (a, b) => a + b;\"\n  }]\n}, {\n  \"topic_name\": \"Conditional Statements\",\n  \"topic_description\": \"Conditional statements allow you to execute different code based on specified conditions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"if Statement\",\n    \"example_code\": \"if (condition) {\\n  // Code to execute if condition is true\\n}\"\n  }, {\n    \"subtopic_name\": \"else Statement\",\n    \"example_code\": \"if (condition) {\\n  // Code if true\\n} else {\\n  // Code if false\\n}\"\n  }, {\n    \"subtopic_name\": \"Switch Statement\",\n    \"example_code\": \"switch (value) {\\n  case 1:\\n    // Code for case 1\\n    break;\\n  case 2:\\n    // Code for case 2\\n    break;\\n  default:\\n    // Default code\\n}\"\n  }]\n}, {\n  \"topic_name\": \"Loops\",\n  \"topic_description\": \"Loops allow you to repeatedly execute code until a specified condition is met.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"for Loop\",\n    \"example_code\": \"for (let i = 0; i < 5; i++) {\\n  // Code to repeat\\n}\"\n  }, {\n    \"subtopic_name\": \"while Loop\",\n    \"example_code\": \"let i = 0;\\nwhile (i < 5) {\\n  // Code to repeat\\n  i++;\\n}\"\n  }, {\n    \"subtopic_name\": \"forEach Loop\",\n    \"example_code\": \"array.forEach(item => {\\n  // Code for each item\\n});\"\n  }]\n}, {\n  \"topic_name\": \"Arrays\",\n  \"topic_description\": \"Arrays are ordered lists of values that can be accessed by index.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Arrays\",\n    \"example_code\": \"let fruits = ['apple', 'banana', 'cherry'];\"\n  }, {\n    \"subtopic_name\": \"Accessing Elements\",\n    \"example_code\": \"let firstFruit = fruits[0];\"\n  }, {\n    \"subtopic_name\": \"Array Methods\",\n    \"example_code\": \"fruits.push('orange');\\nfruits.pop();\\nfruits.length;\"\n  }]\n}, {\n  \"topic_name\": \"Objects\",\n  \"topic_description\": \"Objects in JavaScript store collections of key-value pairs.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Objects\",\n    \"example_code\": \"let person = {\\n  firstName: 'John',\\n  lastName: 'Doe'\\n};\"\n  }, {\n    \"subtopic_name\": \"Accessing Properties\",\n    \"example_code\": \"let firstName = person.firstName;\"\n  }, {\n    \"subtopic_name\": \"Object Methods\",\n    \"example_code\": \"person.sayHello = function() {\\n  return 'Hello, ' + this.firstName;\\n};\"\n  }]\n}, {\n  \"topic_name\": \"DOM Manipulation\",\n  \"topic_description\": \"The Document Object Model (DOM) allows you to manipulate HTML elements and their properties.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Selecting Elements\",\n    \"example_code\": \"document.getElementById('elementId');\\ndocument.querySelector('.className');\"\n  }, {\n    \"subtopic_name\": \"Changing HTML Content\",\n    \"example_code\": \"element.innerHTML = 'New content';\\nelement.textContent = 'Text content';\"\n  }, {\n    \"subtopic_name\": \"Event Handling\",\n    \"example_code\": \"element.addEventListener('click', function() {\\n  // Event handler code\\n});\"\n  }]\n}, {\n  \"topic_name\": \"Promises and Asynchronous Programming\",\n  \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Promises\",\n    \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\n  }, {\n    \"subtopic_name\": \"Fetching Data with fetch\",\n    \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\n  }, {\n    \"subtopic_name\": \"Async/Await\",\n    \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\n  }]\n}, {\n  \"topic_name\": \"ES6 Features\",\n  \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Arrow Functions\",\n    \"example_code\": \"const add = (a, b) => a + b;\"\n  }, {\n    \"subtopic_name\": \"Template Literals\",\n    \"example_code\": \"const message = `Hello, ${name}`;\"\n  }, {\n    \"subtopic_name\": \"Destructuring Assignment\",\n    \"example_code\": \"const { firstName, lastName } = person;\"\n  }]\n}, {\n  \"topic_name\": \"Error Handling\",\n  \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"try...catch Statement\",\n    \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\n  }, {\n    \"subtopic_name\": \"Throwing Custom Errors\",\n    \"example_code\": \"throw new Error('Custom error message');\"\n  }, {\n    \"subtopic_name\": \"Handling Promise Errors\",\n    \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\n  }]\n}, {\n  \"topic_name\": \"Modules\",\n  \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Exporting Modules\",\n    \"example_code\": \"export const functionName = () => {...};\"\n  }, {\n    \"subtopic_name\": \"Importing Modules\",\n    \"example_code\": \"import { functionName } from './module.js';\"\n  }, {\n    \"subtopic_name\": \"Default Exports\",\n    \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\n  }]\n}, {\n  \"topic_name\": \"Local Storage\",\n  \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Storing Data\",\n    \"example_code\": \"localStorage.setItem('key', 'value');\"\n  }, {\n    \"subtopic_name\": \"Retrieving Data\",\n    \"example_code\": \"const data = localStorage.getItem('key');\"\n  }, {\n    \"subtopic_name\": \"Removing Data\",\n    \"example_code\": \"localStorage.removeItem('key');\"\n  }]\n}, {\n  \"topic_name\": \"Regular Expressions\",\n  \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Regex\",\n    \"example_code\": \"/pattern/;\"\n  }, {\n    \"subtopic_name\": \"Matching Strings\",\n    \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\n  }, {\n    \"subtopic_name\": \"Replacing Strings\",\n    \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\n  }]\n}, {\n  \"topic_name\": \"JSON\",\n  \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Parsing JSON\",\n    \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\n  }, {\n    \"subtopic_name\": \"Stringifying JSON\",\n    \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\n  }]\n}, {\n  \"topic_name\": \"Date and Time\",\n  \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Date Objects\",\n    \"example_code\": \"const currentDate = new Date();\"\n  }, {\n    \"subtopic_name\": \"Getting Date Components\",\n    \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\n  }, {\n    \"subtopic_name\": \"Formatting Dates\",\n    \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\n  }]\n}, {\n  \"topic_name\": \"Promises and Asynchronous Programming\",\n  \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Promises\",\n    \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\n  }, {\n    \"subtopic_name\": \"Fetching Data with fetch\",\n    \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\n  }, {\n    \"subtopic_name\": \"Async/Await\",\n    \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\n  }]\n}, {\n  \"topic_name\": \"ES6 Features\",\n  \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Arrow Functions\",\n    \"example_code\": \"const add = (a, b) => a + b;\"\n  }, {\n    \"subtopic_name\": \"Template Literals\",\n    \"example_code\": \"const message = `Hello, ${name}`;\"\n  }, {\n    \"subtopic_name\": \"Destructuring Assignment\",\n    \"example_code\": \"const { firstName, lastName } = person;\"\n  }]\n}, {\n  \"topic_name\": \"Error Handling\",\n  \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"try...catch Statement\",\n    \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\n  }, {\n    \"subtopic_name\": \"Throwing Custom Errors\",\n    \"example_code\": \"throw new Error('Custom error message');\"\n  }, {\n    \"subtopic_name\": \"Handling Promise Errors\",\n    \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\n  }]\n}, {\n  \"topic_name\": \"Modules\",\n  \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Exporting Modules\",\n    \"example_code\": \"export const functionName = () => {...};\"\n  }, {\n    \"subtopic_name\": \"Importing Modules\",\n    \"example_code\": \"import { functionName } from './module.js';\"\n  }, {\n    \"subtopic_name\": \"Default Exports\",\n    \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\n  }]\n}, {\n  \"topic_name\": \"Local Storage\",\n  \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Storing Data\",\n    \"example_code\": \"localStorage.setItem('key', 'value');\"\n  }, {\n    \"subtopic_name\": \"Retrieving Data\",\n    \"example_code\": \"const data = localStorage.getItem('key');\"\n  }, {\n    \"subtopic_name\": \"Removing Data\",\n    \"example_code\": \"localStorage.removeItem('key');\"\n  }]\n}, {\n  \"topic_name\": \"Regular Expressions\",\n  \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Regex\",\n    \"example_code\": \"/pattern/;\"\n  }, {\n    \"subtopic_name\": \"Matching Strings\",\n    \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\n  }, {\n    \"subtopic_name\": \"Replacing Strings\",\n    \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\n  }]\n}, {\n  \"topic_name\": \"JSON\",\n  \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Parsing JSON\",\n    \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\n  }, {\n    \"subtopic_name\": \"Stringifying JSON\",\n    \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\n  }]\n}, {\n  \"topic_name\": \"Date and Time\",\n  \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Date Objects\",\n    \"example_code\": \"const currentDate = new Date();\"\n  }, {\n    \"subtopic_name\": \"Getting Date Components\",\n    \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\n  }, {\n    \"subtopic_name\": \"Formatting Dates\",\n    \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\n  }]\n}\n// Add more topics and subtopics as needed\n];\n\n// console.log(javaScriptData[0]);\nexport default javaScriptData;","map":{"version":3,"names":["exp","javaScriptData"],"sources":["D:/Projects/educationWebsite/education-website/src/CoursesFolder/JavaScript/javaScriptCourseData.js"],"sourcesContent":["exp\r\nvar javaScriptData = [\r\n    {\r\n        \"topic_name\": \"Variables and Data Types\",\r\n        \"topic_description\": \"JavaScript variables can store data of different types, including numbers, strings, and objects.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Declaring Variables\",\r\n                \"example_code\": \"let variableName = 'Hello, World!';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Data Types\",\r\n                \"example_code\": \"let num = 42;\\nlet str = 'Hello';\\nlet bool = true;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Type Conversion\",\r\n                \"example_code\": \"let numStr = '42';\\nlet num = parseInt(numStr);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Functions\",\r\n        \"topic_description\": \"Functions in JavaScript are reusable blocks of code that can take parameters and return values.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Defining Functions\",\r\n                \"example_code\": \"function functionName() {\\n  // Code here\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Function Parameters\",\r\n                \"example_code\": \"function greet(name) {\\n  return 'Hello, ' + name;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Conditional Statements\",\r\n        \"topic_description\": \"Conditional statements allow you to execute different code based on specified conditions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"if Statement\",\r\n                \"example_code\": \"if (condition) {\\n  // Code to execute if condition is true\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"else Statement\",\r\n                \"example_code\": \"if (condition) {\\n  // Code if true\\n} else {\\n  // Code if false\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Switch Statement\",\r\n                \"example_code\": \"switch (value) {\\n  case 1:\\n    // Code for case 1\\n    break;\\n  case 2:\\n    // Code for case 2\\n    break;\\n  default:\\n    // Default code\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Loops\",\r\n        \"topic_description\": \"Loops allow you to repeatedly execute code until a specified condition is met.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"for Loop\",\r\n                \"example_code\": \"for (let i = 0; i < 5; i++) {\\n  // Code to repeat\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"while Loop\",\r\n                \"example_code\": \"let i = 0;\\nwhile (i < 5) {\\n  // Code to repeat\\n  i++;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"forEach Loop\",\r\n                \"example_code\": \"array.forEach(item => {\\n  // Code for each item\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Arrays\",\r\n        \"topic_description\": \"Arrays are ordered lists of values that can be accessed by index.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Arrays\",\r\n                \"example_code\": \"let fruits = ['apple', 'banana', 'cherry'];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Accessing Elements\",\r\n                \"example_code\": \"let firstFruit = fruits[0];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Array Methods\",\r\n                \"example_code\": \"fruits.push('orange');\\nfruits.pop();\\nfruits.length;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Objects\",\r\n        \"topic_description\": \"Objects in JavaScript store collections of key-value pairs.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Objects\",\r\n                \"example_code\": \"let person = {\\n  firstName: 'John',\\n  lastName: 'Doe'\\n};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Accessing Properties\",\r\n                \"example_code\": \"let firstName = person.firstName;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Object Methods\",\r\n                \"example_code\": \"person.sayHello = function() {\\n  return 'Hello, ' + this.firstName;\\n};\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"DOM Manipulation\",\r\n        \"topic_description\": \"The Document Object Model (DOM) allows you to manipulate HTML elements and their properties.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Selecting Elements\",\r\n                \"example_code\": \"document.getElementById('elementId');\\ndocument.querySelector('.className');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Changing HTML Content\",\r\n                \"example_code\": \"element.innerHTML = 'New content';\\nelement.textContent = 'Text content';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Event Handling\",\r\n                \"example_code\": \"element.addEventListener('click', function() {\\n  // Event handler code\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Asynchronous Programming\",\r\n        \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Promises\",\r\n                \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching Data with fetch\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Async/Await\",\r\n                \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"ES6 Features\",\r\n        \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Template Literals\",\r\n                \"example_code\": \"const message = `Hello, ${name}`;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Destructuring Assignment\",\r\n                \"example_code\": \"const { firstName, lastName } = person;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"try...catch Statement\",\r\n                \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Throwing Custom Errors\",\r\n                \"example_code\": \"throw new Error('Custom error message');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Promise Errors\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Modules\",\r\n        \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Exporting Modules\",\r\n                \"example_code\": \"export const functionName = () => {...};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"import { functionName } from './module.js';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Default Exports\",\r\n                \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Local Storage\",\r\n        \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Storing Data\",\r\n                \"example_code\": \"localStorage.setItem('key', 'value');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Retrieving Data\",\r\n                \"example_code\": \"const data = localStorage.getItem('key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Removing Data\",\r\n                \"example_code\": \"localStorage.removeItem('key');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Regular Expressions\",\r\n        \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Regex\",\r\n                \"example_code\": \"/pattern/;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Matching Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Replacing Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"JSON\",\r\n        \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Parsing JSON\",\r\n                \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Stringifying JSON\",\r\n                \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Date and Time\",\r\n        \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Date Objects\",\r\n                \"example_code\": \"const currentDate = new Date();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Getting Date Components\",\r\n                \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Formatting Dates\",\r\n                \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Asynchronous Programming\",\r\n        \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Promises\",\r\n                \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching Data with fetch\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Async/Await\",\r\n                \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"ES6 Features\",\r\n        \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Template Literals\",\r\n                \"example_code\": \"const message = `Hello, ${name}`;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Destructuring Assignment\",\r\n                \"example_code\": \"const { firstName, lastName } = person;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"try...catch Statement\",\r\n                \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Throwing Custom Errors\",\r\n                \"example_code\": \"throw new Error('Custom error message');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Promise Errors\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Modules\",\r\n        \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Exporting Modules\",\r\n                \"example_code\": \"export const functionName = () => {...};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"import { functionName } from './module.js';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Default Exports\",\r\n                \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Local Storage\",\r\n        \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Storing Data\",\r\n                \"example_code\": \"localStorage.setItem('key', 'value');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Retrieving Data\",\r\n                \"example_code\": \"const data = localStorage.getItem('key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Removing Data\",\r\n                \"example_code\": \"localStorage.removeItem('key');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Regular Expressions\",\r\n        \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Regex\",\r\n                \"example_code\": \"/pattern/;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Matching Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Replacing Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"JSON\",\r\n        \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Parsing JSON\",\r\n                \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Stringifying JSON\",\r\n                \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Date and Time\",\r\n        \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Date Objects\",\r\n                \"example_code\": \"const currentDate = new Date();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Getting Date Components\",\r\n                \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Formatting Dates\",\r\n                \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\r\n            }\r\n        ]\r\n    }\r\n    // Add more topics and subtopics as needed\r\n];\r\n\r\n// console.log(javaScriptData[0]);\r\nexport default javaScriptData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}