{"ast":null,"code":"var AngularData = [{\n  \"topic_name\": \"Angular Overview\",\n  \"topic_description\": \"Angular is a popular JavaScript framework for building web applications. It provides a structured architecture, two-way data binding, and a wide range of features for building modern web apps.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a New Angular App\",\n    \"example_code\": \"ng new my-app\"\n  }, {\n    \"subtopic_name\": \"Running the Development Server\",\n    \"example_code\": \"ng serve\"\n  }, {\n    \"subtopic_name\": \"Angular CLI Commands\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }]\n}, {\n  \"topic_name\": \"Components\",\n  \"topic_description\": \"Components are the building blocks of Angular applications. They encapsulate the user interface and logic of a part of the application.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Component\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Component Templates\",\n    \"example_code\": \"@Component({\\n  selector: 'app-my-component',\\n  templateUrl: './my-component.component.html',\\n})\"\n  }, {\n    \"subtopic_name\": \"Component Logic\",\n    \"example_code\": \"export class MyComponent implements OnInit {\\n  constructor() { }\\n  ngOnInit() { }\\n}\"\n  }, {\n    \"subtopic_name\": \"Using Components\",\n    \"example_code\": \"<app-my-component></app-my-component>\"\n  }]\n}, {\n  \"topic_name\": \"Templates and Data Binding\",\n  \"topic_description\": \"Templates in Angular are used to define the structure of your application's user interface. Data binding allows you to connect your component logic with the template.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Interpolation\",\n    \"example_code\": \"{{ data }}\"\n  }, {\n    \"subtopic_name\": \"Property Binding\",\n    \"example_code\": \"[property]=\\\"data\\\"\"\n  }, {\n    \"subtopic_name\": \"Event Binding\",\n    \"example_code\": \"(event)=\\\"handleEvent($event)\\\"\"\n  }, {\n    \"subtopic_name\": \"Two-Way Data Binding\",\n    \"example_code\": \"[(ngModel)]=\\\"data\\\"\"\n  }]\n}, {\n  \"topic_name\": \"Directives\",\n  \"topic_description\": \"Directives are special markers in the DOM that tell Angular to do something with a DOM element or component.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Built-in Directives\",\n    \"example_code\": \"*ngIf, *ngFor, *ngSwitch, [ngClass], [ngStyle]\"\n  }, {\n    \"subtopic_name\": \"Creating Custom Directives\",\n    \"example_code\": \"@Directive({ selector: '[appHighlight]' })\"\n  }, {\n    \"subtopic_name\": \"Using Custom Directives\",\n    \"example_code\": \"<p appHighlight>Highlight me!</p>\"\n  }]\n}, {\n  \"topic_name\": \"Services\",\n  \"topic_description\": \"Services are used to share data or logic across different parts of your application. They are a way to keep your components lean and focused on their own tasks.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Service\",\n    \"example_code\": \"ng generate service my-service\"\n  }, {\n    \"subtopic_name\": \"Injecting Services\",\n    \"example_code\": \"constructor(private myService: MyService) { }\"\n  }, {\n    \"subtopic_name\": \"Using Services\",\n    \"example_code\": \"this.myService.getData()\"\n  }]\n}, {\n  \"topic_name\": \"Routing\",\n  \"topic_description\": \"Routing allows you to build a single-page application with navigation. You can define routes and associate components with them.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Configuring Routes\",\n    \"example_code\": \"const routes: Routes = [\\n  { path: 'home', component: HomeComponent },\\n  { path: 'about', component: AboutComponent },\\n];\"\n  }, {\n    \"subtopic_name\": \"Router Outlet\",\n    \"example_code\": \"<router-outlet></router-outlet>\"\n  }, {\n    \"subtopic_name\": \"Navigating Between Routes\",\n    \"example_code\": \"<a routerLink=\\\"/home\\\">Home</a>\"\n  }]\n}, {\n  \"topic_name\": \"Forms\",\n  \"topic_description\": \"Angular provides powerful tools for working with forms, including template-driven forms and reactive forms.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Template-Driven Forms\",\n    \"example_code\": \"<form (ngSubmit)=\\\"onSubmit()\\\">\\n  <input [(ngModel)]=\\\"data\\\">\\n</form>\"\n  }, {\n    \"subtopic_name\": \"Reactive Forms\",\n    \"example_code\": \"import { FormBuilder, FormGroup } from '@angular/forms';\\n\\nthis.myForm = this.fb.group({\\n  name: [''],\\n  email: ['']\\n});\"\n  }, {\n    \"subtopic_name\": \"Form Validation\",\n    \"example_code\": \"Validators.required, Validators.email\"\n  }]\n}, {\n  \"topic_name\": \"HTTP Client\",\n  \"topic_description\": \"Angular's HTTP client allows you to make HTTP requests to a server. It includes features for handling request and response data.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Importing HttpClientModule\",\n    \"example_code\": \"import { HttpClientModule } from '@angular/common/http';\"\n  }, {\n    \"subtopic_name\": \"Making GET Requests\",\n    \"example_code\": \"this.http.get('/api/data').subscribe(data => { /* handle data */ });\"\n  }, {\n    \"subtopic_name\": \"Making POST Requests\",\n    \"example_code\": \"this.http.post('/api/data', { data }).subscribe(response => { /* handle response */ });\"\n  }]\n}, {\n  \"topic_name\": \"Lifecycle Hooks\",\n  \"topic_description\": \"Angular components have a set of lifecycle hooks that allow you to perform actions at various stages of a component's life.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"ngOnInit\",\n    \"example_code\": \"ngOnInit() { /* initialization code */ }\"\n  }, {\n    \"subtopic_name\": \"ngOnChanges\",\n    \"example_code\": \"ngOnChanges(changes: SimpleChanges) { /* change handling code */ }\"\n  }, {\n    \"subtopic_name\": \"ngOnDestroy\",\n    \"example_code\": \"ngOnDestroy() { /* cleanup code */ }\"\n  }]\n}, {\n  \"topic_name\": \"Dependency Injection\",\n  \"topic_description\": \"Angular's dependency injection system is used to provide dependencies to components and services in a hierarchical manner.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Injecting Services\",\n    \"example_code\": \"constructor(private myService: MyService) { }\"\n  }, {\n    \"subtopic_name\": \"Providing Services\",\n    \"example_code\": \"@Injectable({ providedIn: 'root' })\"\n  }]\n}, {\n  \"topic_name\": \"Angular Modules\",\n  \"topic_description\": \"Angular modules are used to organize your application into functional units. Each module can contain components, services, and other features.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Module\",\n    \"example_code\": \"ng generate module my-module\"\n  }, {\n    \"subtopic_name\": \"Importing Modules\",\n    \"example_code\": \"imports: [MyModule]\"\n  }]\n}, {\n  \"topic_name\": \"Angular CLI\",\n  \"topic_description\": \"The Angular CLI (Command Line Interface) provides a set of powerful tools for developing and deploying Angular applications.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Components\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Generating Modules\",\n    \"example_code\": \"ng generate module my-module\"\n  }, {\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }]\n}, {\n  \"topic_name\": \"State Management\",\n  \"topic_description\": \"State management is crucial in Angular applications. You can use various state management libraries like NgRx, Akita, or build custom solutions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"NgRx Store\",\n    \"example_code\": \"StoreModule.forRoot(reducers, { initialState })\"\n  }, {\n    \"subtopic_name\": \"Actions and Reducers\",\n    \"example_code\": \"createAction('Add Item', props<{ item: Item }>())\"\n  }]\n}, {\n  \"topic_name\": \"Internationalization (i18n)\",\n  \"topic_description\": \"Angular provides built-in support for internationalization and localization, allowing your app to support multiple languages and regions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Setting Up Translation Files\",\n    \"example_code\": \"ng xi18n\"\n  }, {\n    \"subtopic_name\": \"Translating Text\",\n    \"example_code\": \"{{ 'Hello, World!' | translate }}\"\n  }]\n}, {\n  \"topic_name\": \"Authentication and Authorization\",\n  \"topic_description\": \"Securing your Angular application is essential. You can implement authentication and authorization using libraries like Firebase Authentication or build custom solutions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Firebase Authentication\",\n    \"example_code\": \"signInWithEmailAndPassword(email, password)\"\n  }, {\n    \"subtopic_name\": \"JWT (JSON Web Tokens)\",\n    \"example_code\": \"const token = jwt.sign({ userId }, secretKey);\"\n  }]\n}, {\n  \"topic_name\": \"Angular Material\",\n  \"topic_description\": \"Angular Material is a UI component library that provides ready-to-use components for building a polished and modern user interface.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Installation\",\n    \"example_code\": \"ng add @angular/material\"\n  }, {\n    \"subtopic_name\": \"Using Material Components\",\n    \"example_code\": \"<mat-button>Click me</mat-button>\"\n  }]\n}, {\n  \"topic_name\": \"Error Handling\",\n  \"topic_description\": \"Error handling in Angular involves handling errors that occur during application execution and providing a good user experience.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Error Interceptor\",\n    \"example_code\": \"intercept(request, next) { /* error handling code */ }\"\n  }, {\n    \"subtopic_name\": \"Global Error Handling\",\n    \"example_code\": \"ErrorHandler.handle(error);\"\n  }]\n}, {\n  \"topic_name\": \"Testing\",\n  \"topic_description\": \"Testing is crucial for ensuring the reliability and correctness of your Angular applications. Tools like Jasmine and Karma are commonly used for Angular testing.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Unit Testing\",\n    \"example_code\": \"describe('MyComponent', () => { /* test cases */ });\"\n  }, {\n    \"subtopic_name\": \"Integration Testing\",\n    \"example_code\": \"beforeEach(async(() => { /* setup code */ }));\"\n  }]\n}, {\n  \"topic_name\": \"Deployment\",\n  \"topic_description\": \"Deploying an Angular application involves building a production-ready bundle and hosting it on a web server or cloud platform.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }, {\n    \"subtopic_name\": \"Hosting on Firebase\",\n    \"example_code\": \"firebase deploy\"\n  }, {\n    \"subtopic_name\": \"Deploying to AWS\",\n    \"example_code\": \"aws s3 sync ./dist s3://my-angular-app\"\n  }]\n}, {\n  \"topic_name\": \"Angular Overview\",\n  \"topic_description\": \"Angular is a popular JavaScript framework for building web applications. It provides a structured architecture, two-way data binding, and a wide range of features for building modern web apps.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a New Angular App\",\n    \"example_code\": \"ng new my-app\"\n  }, {\n    \"subtopic_name\": \"Running the Development Server\",\n    \"example_code\": \"ng serve\"\n  }, {\n    \"subtopic_name\": \"Angular CLI Commands\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }]\n}, {\n  \"topic_name\": \"Components\",\n  \"topic_description\": \"Components are the building blocks of Angular applications. They encapsulate the user interface and logic of a part of the application.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Component\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Component Templates\",\n    \"example_code\": \"@Component({\\n  selector: 'app-my-component',\\n  templateUrl: './my-component.component.html',\\n})\"\n  }, {\n    \"subtopic_name\": \"Component Logic\",\n    \"example_code\": \"export class MyComponent implements OnInit {\\n  constructor() { }\\n  ngOnInit() { }\\n}\"\n  }, {\n    \"subtopic_name\": \"Using Components\",\n    \"example_code\": \"<app-my-component></app-my-component>\"\n  }]\n}, {\n  \"topic_name\": \"Templates and Data Binding\",\n  \"topic_description\": \"Templates in Angular are used to define the structure of your application's user interface. Data binding allows you to connect your component logic with the template.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Interpolation\",\n    \"example_code\": \"{{ data }}\"\n  }, {\n    \"subtopic_name\": \"Property Binding\",\n    \"example_code\": \"[property]=\\\"data\\\"\"\n  }, {\n    \"subtopic_name\": \"Event Binding\",\n    \"example_code\": \"(event)=\\\"handleEvent($event)\\\"\"\n  }, {\n    \"subtopic_name\": \"Two-Way Data Binding\",\n    \"example_code\": \"[(ngModel)]=\\\"data\\\"\"\n  }]\n}, {\n  \"topic_name\": \"Directives\",\n  \"topic_description\": \"Directives are special markers in the DOM that tell Angular to do something with a DOM element or component.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Built-in Directives\",\n    \"example_code\": \"*ngIf, *ngFor, *ngSwitch, [ngClass], [ngStyle]\"\n  }, {\n    \"subtopic_name\": \"Creating Custom Directives\",\n    \"example_code\": \"@Directive({ selector: '[appHighlight]' })\"\n  }, {\n    \"subtopic_name\": \"Using Custom Directives\",\n    \"example_code\": \"<p appHighlight>Highlight me!</p>\"\n  }]\n}, {\n  \"topic_name\": \"Services\",\n  \"topic_description\": \"Services are used to share data or logic across different parts of your application. They are a way to keep your components lean and focused on their own tasks.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Service\",\n    \"example_code\": \"ng generate service my-service\"\n  }, {\n    \"subtopic_name\": \"Injecting Services\",\n    \"example_code\": \"constructor(private myService: MyService) { }\"\n  }, {\n    \"subtopic_name\": \"Using Services\",\n    \"example_code\": \"this.myService.getData()\"\n  }]\n}, {\n  \"topic_name\": \"Routing\",\n  \"topic_description\": \"Routing allows you to build a single-page application with navigation. You can define routes and associate components with them.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Configuring Routes\",\n    \"example_code\": \"const routes: Routes = [\\n  { path: 'home', component: HomeComponent },\\n  { path: 'about', component: AboutComponent },\\n];\"\n  }, {\n    \"subtopic_name\": \"Router Outlet\",\n    \"example_code\": \"<router-outlet></router-outlet>\"\n  }, {\n    \"subtopic_name\": \"Navigating Between Routes\",\n    \"example_code\": \"<a routerLink=\\\"/home\\\">Home</a>\"\n  }]\n}, {\n  \"topic_name\": \"Forms\",\n  \"topic_description\": \"Angular provides powerful tools for working with forms, including template-driven forms and reactive forms.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Template-Driven Forms\",\n    \"example_code\": \"<form (ngSubmit)=\\\"onSubmit()\\\">\\n  <input [(ngModel)]=\\\"data\\\">\\n</form>\"\n  }, {\n    \"subtopic_name\": \"Reactive Forms\",\n    \"example_code\": \"import { FormBuilder, FormGroup } from '@angular/forms';\\n\\nthis.myForm = this.fb.group({\\n  name: [''],\\n  email: ['']\\n});\"\n  }, {\n    \"subtopic_name\": \"Form Validation\",\n    \"example_code\": \"Validators.required, Validators.email\"\n  }]\n}, {\n  \"topic_name\": \"HTTP Client\",\n  \"topic_description\": \"Angular's HTTP client allows you to make HTTP requests to a server. It includes features for handling request and response data.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Importing HttpClientModule\",\n    \"example_code\": \"import { HttpClientModule } from '@angular/common/http';\"\n  }, {\n    \"subtopic_name\": \"Making GET Requests\",\n    \"example_code\": \"this.http.get('/api/data').subscribe(data => { /* handle data */ });\"\n  }, {\n    \"subtopic_name\": \"Making POST Requests\",\n    \"example_code\": \"this.http.post('/api/data', { data }).subscribe(response => { /* handle response */ });\"\n  }]\n}, {\n  \"topic_name\": \"Lifecycle Hooks\",\n  \"topic_description\": \"Angular components have a set of lifecycle hooks that allow you to perform actions at various stages of a component's life.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"ngOnInit\",\n    \"example_code\": \"ngOnInit() { /* initialization code */ }\"\n  }, {\n    \"subtopic_name\": \"ngOnChanges\",\n    \"example_code\": \"ngOnChanges(changes: SimpleChanges) { /* change handling code */ }\"\n  }, {\n    \"subtopic_name\": \"ngOnDestroy\",\n    \"example_code\": \"ngOnDestroy() { /* cleanup code */ }\"\n  }]\n}, {\n  \"topic_name\": \"Dependency Injection\",\n  \"topic_description\": \"Angular's dependency injection system is used to provide dependencies to components and services in a hierarchical manner.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Injecting Services\",\n    \"example_code\": \"constructor(private myService: MyService) { }\"\n  }, {\n    \"subtopic_name\": \"Providing Services\",\n    \"example_code\": \"@Injectable({ providedIn: 'root' })\"\n  }]\n}, {\n  \"topic_name\": \"Angular Modules\",\n  \"topic_description\": \"Angular modules are used to organize your application into functional units. Each module can contain components, services, and other features.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating a Module\",\n    \"example_code\": \"ng generate module my-module\"\n  }, {\n    \"subtopic_name\": \"Importing Modules\",\n    \"example_code\": \"imports: [MyModule]\"\n  }]\n}, {\n  \"topic_name\": \"Angular CLI\",\n  \"topic_description\": \"The Angular CLI (Command Line Interface) provides a set of powerful tools for developing and deploying Angular applications.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Creating Components\",\n    \"example_code\": \"ng generate component my-component\"\n  }, {\n    \"subtopic_name\": \"Generating Modules\",\n    \"example_code\": \"ng generate module my-module\"\n  }, {\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }]\n}, {\n  \"topic_name\": \"State Management\",\n  \"topic_description\": \"State management is crucial in Angular applications. You can use various state management libraries like NgRx, Akita, or build custom solutions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"NgRx Store\",\n    \"example_code\": \"StoreModule.forRoot(reducers, { initialState })\"\n  }, {\n    \"subtopic_name\": \"Actions and Reducers\",\n    \"example_code\": \"createAction('Add Item', props<{ item: Item }>())\"\n  }]\n}, {\n  \"topic_name\": \"Internationalization (i18n)\",\n  \"topic_description\": \"Angular provides built-in support for internationalization and localization, allowing your app to support multiple languages and regions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Setting Up Translation Files\",\n    \"example_code\": \"ng xi18n\"\n  }, {\n    \"subtopic_name\": \"Translating Text\",\n    \"example_code\": \"{{ 'Hello, World!' | translate }}\"\n  }]\n}, {\n  \"topic_name\": \"Authentication and Authorization\",\n  \"topic_description\": \"Securing your Angular application is essential. You can implement authentication and authorization using libraries like Firebase Authentication or build custom solutions.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Firebase Authentication\",\n    \"example_code\": \"signInWithEmailAndPassword(email, password)\"\n  }, {\n    \"subtopic_name\": \"JWT (JSON Web Tokens)\",\n    \"example_code\": \"const token = jwt.sign({ userId }, secretKey);\"\n  }]\n}, {\n  \"topic_name\": \"Angular Material\",\n  \"topic_description\": \"Angular Material is a UI component library that provides ready-to-use components for building a polished and modern user interface.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Installation\",\n    \"example_code\": \"ng add @angular/material\"\n  }, {\n    \"subtopic_name\": \"Using Material Components\",\n    \"example_code\": \"<mat-button>Click me</mat-button>\"\n  }]\n}, {\n  \"topic_name\": \"Error Handling\",\n  \"topic_description\": \"Error handling in Angular involves handling errors that occur during application execution and providing a good user experience.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Error Interceptor\",\n    \"example_code\": \"intercept(request, next) { /* error handling code */ }\"\n  }, {\n    \"subtopic_name\": \"Global Error Handling\",\n    \"example_code\": \"ErrorHandler.handle(error);\"\n  }]\n}, {\n  \"topic_name\": \"Testing\",\n  \"topic_description\": \"Testing is crucial for ensuring the reliability and correctness of your Angular applications. Tools like Jasmine and Karma are commonly used for Angular testing.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Unit Testing\",\n    \"example_code\": \"describe('MyComponent', () => { /* test cases */ });\"\n  }, {\n    \"subtopic_name\": \"Integration Testing\",\n    \"example_code\": \"beforeEach(async(() => { /* setup code */ }));\"\n  }]\n}, {\n  \"topic_name\": \"Deployment\",\n  \"topic_description\": \"Deploying an Angular application involves building a production-ready bundle and hosting it on a web server or cloud platform.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Building for Production\",\n    \"example_code\": \"ng build --prod\"\n  }, {\n    \"subtopic_name\": \"Hosting on Firebase\",\n    \"example_code\": \"firebase deploy\"\n  }, {\n    \"subtopic_name\": \"Deploying to AWS\",\n    \"example_code\": \"aws s3 sync ./dist s3://my-angular-app\"\n  }]\n}];\nexport default AngularData;","map":{"version":3,"names":["AngularData"],"sources":["D:/Projects/educationWebsite/education-website/src/CoursesFolder/Angular/AngularData.js"],"sourcesContent":["var AngularData = [\r\n    {\r\n        \"topic_name\": \"Angular Overview\",\r\n        \"topic_description\": \"Angular is a popular JavaScript framework for building web applications. It provides a structured architecture, two-way data binding, and a wide range of features for building modern web apps.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a New Angular App\",\r\n                \"example_code\": \"ng new my-app\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Running the Development Server\",\r\n                \"example_code\": \"ng serve\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Angular CLI Commands\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Components\",\r\n        \"topic_description\": \"Components are the building blocks of Angular applications. They encapsulate the user interface and logic of a part of the application.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Component\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Component Templates\",\r\n                \"example_code\": \"@Component({\\n  selector: 'app-my-component',\\n  templateUrl: './my-component.component.html',\\n})\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Component Logic\",\r\n                \"example_code\": \"export class MyComponent implements OnInit {\\n  constructor() { }\\n  ngOnInit() { }\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Components\",\r\n                \"example_code\": \"<app-my-component></app-my-component>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Templates and Data Binding\",\r\n        \"topic_description\": \"Templates in Angular are used to define the structure of your application's user interface. Data binding allows you to connect your component logic with the template.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Interpolation\",\r\n                \"example_code\": \"{{ data }}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Property Binding\",\r\n                \"example_code\": \"[property]=\\\"data\\\"\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Event Binding\",\r\n                \"example_code\": \"(event)=\\\"handleEvent($event)\\\"\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Two-Way Data Binding\",\r\n                \"example_code\": \"[(ngModel)]=\\\"data\\\"\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Directives\",\r\n        \"topic_description\": \"Directives are special markers in the DOM that tell Angular to do something with a DOM element or component.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Built-in Directives\",\r\n                \"example_code\": \"*ngIf, *ngFor, *ngSwitch, [ngClass], [ngStyle]\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating Custom Directives\",\r\n                \"example_code\": \"@Directive({ selector: '[appHighlight]' })\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Custom Directives\",\r\n                \"example_code\": \"<p appHighlight>Highlight me!</p>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Services\",\r\n        \"topic_description\": \"Services are used to share data or logic across different parts of your application. They are a way to keep your components lean and focused on their own tasks.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Service\",\r\n                \"example_code\": \"ng generate service my-service\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Injecting Services\",\r\n                \"example_code\": \"constructor(private myService: MyService) { }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Services\",\r\n                \"example_code\": \"this.myService.getData()\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Routing\",\r\n        \"topic_description\": \"Routing allows you to build a single-page application with navigation. You can define routes and associate components with them.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Configuring Routes\",\r\n                \"example_code\": \"const routes: Routes = [\\n  { path: 'home', component: HomeComponent },\\n  { path: 'about', component: AboutComponent },\\n];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Router Outlet\",\r\n                \"example_code\": \"<router-outlet></router-outlet>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Navigating Between Routes\",\r\n                \"example_code\": \"<a routerLink=\\\"/home\\\">Home</a>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Forms\",\r\n        \"topic_description\": \"Angular provides powerful tools for working with forms, including template-driven forms and reactive forms.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Template-Driven Forms\",\r\n                \"example_code\": \"<form (ngSubmit)=\\\"onSubmit()\\\">\\n  <input [(ngModel)]=\\\"data\\\">\\n</form>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Reactive Forms\",\r\n                \"example_code\": \"import { FormBuilder, FormGroup } from '@angular/forms';\\n\\nthis.myForm = this.fb.group({\\n  name: [''],\\n  email: ['']\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Form Validation\",\r\n                \"example_code\": \"Validators.required, Validators.email\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"HTTP Client\",\r\n        \"topic_description\": \"Angular's HTTP client allows you to make HTTP requests to a server. It includes features for handling request and response data.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Importing HttpClientModule\",\r\n                \"example_code\": \"import { HttpClientModule } from '@angular/common/http';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Making GET Requests\",\r\n                \"example_code\": \"this.http.get('/api/data').subscribe(data => { /* handle data */ });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Making POST Requests\",\r\n                \"example_code\": \"this.http.post('/api/data', { data }).subscribe(response => { /* handle response */ });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Lifecycle Hooks\",\r\n        \"topic_description\": \"Angular components have a set of lifecycle hooks that allow you to perform actions at various stages of a component's life.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"ngOnInit\",\r\n                \"example_code\": \"ngOnInit() { /* initialization code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"ngOnChanges\",\r\n                \"example_code\": \"ngOnChanges(changes: SimpleChanges) { /* change handling code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"ngOnDestroy\",\r\n                \"example_code\": \"ngOnDestroy() { /* cleanup code */ }\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Dependency Injection\",\r\n        \"topic_description\": \"Angular's dependency injection system is used to provide dependencies to components and services in a hierarchical manner.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Injecting Services\",\r\n                \"example_code\": \"constructor(private myService: MyService) { }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Providing Services\",\r\n                \"example_code\": \"@Injectable({ providedIn: 'root' })\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular Modules\",\r\n        \"topic_description\": \"Angular modules are used to organize your application into functional units. Each module can contain components, services, and other features.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Module\",\r\n                \"example_code\": \"ng generate module my-module\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"imports: [MyModule]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular CLI\",\r\n        \"topic_description\": \"The Angular CLI (Command Line Interface) provides a set of powerful tools for developing and deploying Angular applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Components\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Generating Modules\",\r\n                \"example_code\": \"ng generate module my-module\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"State Management\",\r\n        \"topic_description\": \"State management is crucial in Angular applications. You can use various state management libraries like NgRx, Akita, or build custom solutions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"NgRx Store\",\r\n                \"example_code\": \"StoreModule.forRoot(reducers, { initialState })\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Actions and Reducers\",\r\n                \"example_code\": \"createAction('Add Item', props<{ item: Item }>())\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Internationalization (i18n)\",\r\n        \"topic_description\": \"Angular provides built-in support for internationalization and localization, allowing your app to support multiple languages and regions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Setting Up Translation Files\",\r\n                \"example_code\": \"ng xi18n\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Translating Text\",\r\n                \"example_code\": \"{{ 'Hello, World!' | translate }}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication and Authorization\",\r\n        \"topic_description\": \"Securing your Angular application is essential. You can implement authentication and authorization using libraries like Firebase Authentication or build custom solutions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Firebase Authentication\",\r\n                \"example_code\": \"signInWithEmailAndPassword(email, password)\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"JWT (JSON Web Tokens)\",\r\n                \"example_code\": \"const token = jwt.sign({ userId }, secretKey);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular Material\",\r\n        \"topic_description\": \"Angular Material is a UI component library that provides ready-to-use components for building a polished and modern user interface.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installation\",\r\n                \"example_code\": \"ng add @angular/material\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Material Components\",\r\n                \"example_code\": \"<mat-button>Click me</mat-button>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in Angular involves handling errors that occur during application execution and providing a good user experience.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Error Interceptor\",\r\n                \"example_code\": \"intercept(request, next) { /* error handling code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Global Error Handling\",\r\n                \"example_code\": \"ErrorHandler.handle(error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing\",\r\n        \"topic_description\": \"Testing is crucial for ensuring the reliability and correctness of your Angular applications. Tools like Jasmine and Karma are commonly used for Angular testing.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Unit Testing\",\r\n                \"example_code\": \"describe('MyComponent', () => { /* test cases */ });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Integration Testing\",\r\n                \"example_code\": \"beforeEach(async(() => { /* setup code */ }));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Deployment\",\r\n        \"topic_description\": \"Deploying an Angular application involves building a production-ready bundle and hosting it on a web server or cloud platform.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Hosting on Firebase\",\r\n                \"example_code\": \"firebase deploy\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Deploying to AWS\",\r\n                \"example_code\": \"aws s3 sync ./dist s3://my-angular-app\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular Overview\",\r\n        \"topic_description\": \"Angular is a popular JavaScript framework for building web applications. It provides a structured architecture, two-way data binding, and a wide range of features for building modern web apps.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a New Angular App\",\r\n                \"example_code\": \"ng new my-app\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Running the Development Server\",\r\n                \"example_code\": \"ng serve\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Angular CLI Commands\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Components\",\r\n        \"topic_description\": \"Components are the building blocks of Angular applications. They encapsulate the user interface and logic of a part of the application.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Component\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Component Templates\",\r\n                \"example_code\": \"@Component({\\n  selector: 'app-my-component',\\n  templateUrl: './my-component.component.html',\\n})\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Component Logic\",\r\n                \"example_code\": \"export class MyComponent implements OnInit {\\n  constructor() { }\\n  ngOnInit() { }\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Components\",\r\n                \"example_code\": \"<app-my-component></app-my-component>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Templates and Data Binding\",\r\n        \"topic_description\": \"Templates in Angular are used to define the structure of your application's user interface. Data binding allows you to connect your component logic with the template.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Interpolation\",\r\n                \"example_code\": \"{{ data }}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Property Binding\",\r\n                \"example_code\": \"[property]=\\\"data\\\"\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Event Binding\",\r\n                \"example_code\": \"(event)=\\\"handleEvent($event)\\\"\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Two-Way Data Binding\",\r\n                \"example_code\": \"[(ngModel)]=\\\"data\\\"\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Directives\",\r\n        \"topic_description\": \"Directives are special markers in the DOM that tell Angular to do something with a DOM element or component.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Built-in Directives\",\r\n                \"example_code\": \"*ngIf, *ngFor, *ngSwitch, [ngClass], [ngStyle]\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating Custom Directives\",\r\n                \"example_code\": \"@Directive({ selector: '[appHighlight]' })\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Custom Directives\",\r\n                \"example_code\": \"<p appHighlight>Highlight me!</p>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Services\",\r\n        \"topic_description\": \"Services are used to share data or logic across different parts of your application. They are a way to keep your components lean and focused on their own tasks.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Service\",\r\n                \"example_code\": \"ng generate service my-service\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Injecting Services\",\r\n                \"example_code\": \"constructor(private myService: MyService) { }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Services\",\r\n                \"example_code\": \"this.myService.getData()\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Routing\",\r\n        \"topic_description\": \"Routing allows you to build a single-page application with navigation. You can define routes and associate components with them.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Configuring Routes\",\r\n                \"example_code\": \"const routes: Routes = [\\n  { path: 'home', component: HomeComponent },\\n  { path: 'about', component: AboutComponent },\\n];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Router Outlet\",\r\n                \"example_code\": \"<router-outlet></router-outlet>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Navigating Between Routes\",\r\n                \"example_code\": \"<a routerLink=\\\"/home\\\">Home</a>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Forms\",\r\n        \"topic_description\": \"Angular provides powerful tools for working with forms, including template-driven forms and reactive forms.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Template-Driven Forms\",\r\n                \"example_code\": \"<form (ngSubmit)=\\\"onSubmit()\\\">\\n  <input [(ngModel)]=\\\"data\\\">\\n</form>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Reactive Forms\",\r\n                \"example_code\": \"import { FormBuilder, FormGroup } from '@angular/forms';\\n\\nthis.myForm = this.fb.group({\\n  name: [''],\\n  email: ['']\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Form Validation\",\r\n                \"example_code\": \"Validators.required, Validators.email\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"HTTP Client\",\r\n        \"topic_description\": \"Angular's HTTP client allows you to make HTTP requests to a server. It includes features for handling request and response data.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Importing HttpClientModule\",\r\n                \"example_code\": \"import { HttpClientModule } from '@angular/common/http';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Making GET Requests\",\r\n                \"example_code\": \"this.http.get('/api/data').subscribe(data => { /* handle data */ });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Making POST Requests\",\r\n                \"example_code\": \"this.http.post('/api/data', { data }).subscribe(response => { /* handle response */ });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Lifecycle Hooks\",\r\n        \"topic_description\": \"Angular components have a set of lifecycle hooks that allow you to perform actions at various stages of a component's life.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"ngOnInit\",\r\n                \"example_code\": \"ngOnInit() { /* initialization code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"ngOnChanges\",\r\n                \"example_code\": \"ngOnChanges(changes: SimpleChanges) { /* change handling code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"ngOnDestroy\",\r\n                \"example_code\": \"ngOnDestroy() { /* cleanup code */ }\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Dependency Injection\",\r\n        \"topic_description\": \"Angular's dependency injection system is used to provide dependencies to components and services in a hierarchical manner.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Injecting Services\",\r\n                \"example_code\": \"constructor(private myService: MyService) { }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Providing Services\",\r\n                \"example_code\": \"@Injectable({ providedIn: 'root' })\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular Modules\",\r\n        \"topic_description\": \"Angular modules are used to organize your application into functional units. Each module can contain components, services, and other features.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Module\",\r\n                \"example_code\": \"ng generate module my-module\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"imports: [MyModule]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular CLI\",\r\n        \"topic_description\": \"The Angular CLI (Command Line Interface) provides a set of powerful tools for developing and deploying Angular applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Components\",\r\n                \"example_code\": \"ng generate component my-component\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Generating Modules\",\r\n                \"example_code\": \"ng generate module my-module\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"State Management\",\r\n        \"topic_description\": \"State management is crucial in Angular applications. You can use various state management libraries like NgRx, Akita, or build custom solutions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"NgRx Store\",\r\n                \"example_code\": \"StoreModule.forRoot(reducers, { initialState })\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Actions and Reducers\",\r\n                \"example_code\": \"createAction('Add Item', props<{ item: Item }>())\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Internationalization (i18n)\",\r\n        \"topic_description\": \"Angular provides built-in support for internationalization and localization, allowing your app to support multiple languages and regions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Setting Up Translation Files\",\r\n                \"example_code\": \"ng xi18n\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Translating Text\",\r\n                \"example_code\": \"{{ 'Hello, World!' | translate }}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication and Authorization\",\r\n        \"topic_description\": \"Securing your Angular application is essential. You can implement authentication and authorization using libraries like Firebase Authentication or build custom solutions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Firebase Authentication\",\r\n                \"example_code\": \"signInWithEmailAndPassword(email, password)\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"JWT (JSON Web Tokens)\",\r\n                \"example_code\": \"const token = jwt.sign({ userId }, secretKey);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Angular Material\",\r\n        \"topic_description\": \"Angular Material is a UI component library that provides ready-to-use components for building a polished and modern user interface.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installation\",\r\n                \"example_code\": \"ng add @angular/material\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Material Components\",\r\n                \"example_code\": \"<mat-button>Click me</mat-button>\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in Angular involves handling errors that occur during application execution and providing a good user experience.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Error Interceptor\",\r\n                \"example_code\": \"intercept(request, next) { /* error handling code */ }\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Global Error Handling\",\r\n                \"example_code\": \"ErrorHandler.handle(error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing\",\r\n        \"topic_description\": \"Testing is crucial for ensuring the reliability and correctness of your Angular applications. Tools like Jasmine and Karma are commonly used for Angular testing.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Unit Testing\",\r\n                \"example_code\": \"describe('MyComponent', () => { /* test cases */ });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Integration Testing\",\r\n                \"example_code\": \"beforeEach(async(() => { /* setup code */ }));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Deployment\",\r\n        \"topic_description\": \"Deploying an Angular application involves building a production-ready bundle and hosting it on a web server or cloud platform.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Building for Production\",\r\n                \"example_code\": \"ng build --prod\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Hosting on Firebase\",\r\n                \"example_code\": \"firebase deploy\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Deploying to AWS\",\r\n                \"example_code\": \"aws s3 sync ./dist s3://my-angular-app\"\r\n            }\r\n        ]\r\n    },\r\n];\r\n\r\nexport default AngularData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}