{"ast":null,"code":"export var subjectName = \"Three\";\nconst ThreeJsData = [{\n  \"topic_name\": \"Introduction to Three.js\",\n  \"topic_description\": \"Three.js is a JavaScript library used for 3D graphics programming on the web. It provides tools and utilities for creating 3D scenes and animations.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Setting up Three.js\",\n    \"example_code\": `\n// Import Three.js library\nimport * as THREE from 'three';\n\n// Create a scene, camera, and renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\n\n// Add renderer to the DOM\ndocument.body.appendChild(renderer.domElement);\n                `\n  }, {\n    \"subtopic_name\": \"Creating a Basic 3D Object\",\n    \"example_code\": `\n// Create a geometry (e.g., a cube)\nconst geometry = new THREE.BoxGeometry();\nconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\nconst cube = new THREE.Mesh(geometry, material);\n\n// Add the cube to the scene\nscene.add(cube);\n                `\n  }]\n}, {\n  \"topic_name\": \"Basic 3D Concepts\",\n  \"topic_description\": \"Understanding fundamental 3D concepts is crucial for working with Three.js effectively.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Coordinates and Axes\",\n    \"example_code\": `\n// Three.js uses a right-handed coordinate system\n// X-axis points right, Y-axis points up, Z-axis points out of the screen\n`\n  }, {\n    \"subtopic_name\": \"Cameras and Views\",\n    \"example_code\": `\n// Cameras define the view of the scene\n// PerspectiveCamera provides a perspective view, while OrthographicCamera is used for 2D-like views\n`\n  }, {\n    \"subtopic_name\": \"Lights\",\n    \"example_code\": `\n// Lights illuminate the scene\n// Common types: AmbientLight, DirectionalLight, PointLight, SpotLight\n`\n  }, {\n    \"subtopic_name\": \"Materials and Textures\",\n    \"example_code\": `\n// Materials define an object's appearance\n// Textures can be applied to materials to add details\n`\n  }]\n}, {\n  \"topic_name\": \"Geometry and Mesh\",\n  \"topic_description\": \"Geometry and mesh are essential components for creating 3D objects in Three.js.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Basic Geometries\",\n    \"example_code\": `\n// Common geometries: BoxGeometry, SphereGeometry, CylinderGeometry, PlaneGeometry\n`\n  }, {\n    \"subtopic_name\": \"Creating Custom Geometries\",\n    \"example_code\": `\n// Create custom geometries by defining vertices and faces\n// Use BufferGeometry for better performance\n`\n  }, {\n    \"subtopic_name\": \"Mesh Properties\",\n    \"example_code\": `\n// Mesh combines a geometry and a material\n// Position, rotation, and scale can be manipulated\n`\n  }]\n}, {\n  \"topic_name\": \"Materials and Shading\",\n  \"topic_description\": \"Materials determine how an object appears when rendered.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Basic Materials\",\n    \"example_code\": `\n// MeshBasicMaterial: Simple shading with no lighting\n// MeshLambertMaterial: Diffuse shading (matte appearance)\n// MeshPhongMaterial: Phong shading (specular highlights)\n`\n  }, {\n    \"subtopic_name\": \"Texture Mapping\",\n    \"example_code\": `\n// Apply textures to materials for realistic surfaces\n// Load textures with TextureLoader\n`\n  }, {\n    \"subtopic_name\": \"Custom Shaders\",\n    \"example_code\": `\n// Write custom shaders using GLSL for advanced materials and effects\n// Use ShaderMaterial to apply custom shaders to objects\n`\n  }]\n}, {\n  \"topic_name\": \"Lights and Shadows\",\n  \"topic_description\": \"Lights and shadows play a significant role in creating realistic 3D scenes.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Types of Lights\",\n    \"example_code\": `\n// DirectionalLight: Simulates distant light (e.g., sunlight)\n// PointLight: Radiates light in all directions from a point\n// SpotLight: Emits light in a cone shape\n`\n  }, {\n    \"subtopic_name\": \"Adding Shadows\",\n    \"example_code\": `\n// Enable shadows in the renderer and lights\n// Adjust properties like shadowMapSize and shadowBias\n`\n  }, {\n    \"subtopic_name\": \"Shadow Mapping\",\n    \"example_code\": `\n// Shadow mapping techniques for creating realistic shadows\n// Depth texture and shaders are used to calculate shadows\n`\n  }]\n}, {\n  \"topic_name\": \"Animation in Three.js\",\n  \"topic_description\": \"Animating objects and scenes is a crucial aspect of 3D development.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Basic Animations\",\n    \"example_code\": `\n// Use the requestAnimationFrame loop for smooth animations\n// Update object properties (e.g., position, rotation) over time\n`\n  }, {\n    \"subtopic_name\": \"Keyframe Animations\",\n    \"example_code\": `\n// Create keyframe animations using libraries like Tween.js\n// Define keyframes and easing functions\n`\n  }, {\n    \"subtopic_name\": \"Physics Simulations\",\n    \"example_code\": `\n// Integrate physics engines like Cannon.js for realistic simulations\n// Simulate dynamics, collisions, and forces\n`\n  }]\n}, {\n  \"topic_name\": \"Loading 3D Models\",\n  \"topic_description\": \"Loading external 3D models and assets into Three.js.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Using 3D Model Formats\",\n    \"example_code\": `\n// Load 3D models in common formats like OBJ, GLTF, FBX\n// Use loaders (e.g., GLTFLoader) to import models\n`\n  }, {\n    \"subtopic_name\": \"Manipulating Imported Models\",\n    \"example_code\": `\n// Adjust model position, scale, and rotation\n// Animate imported models along with the scene\n`\n  }, {\n    \"subtopic_name\": \"Optimizing Model Loading\",\n    \"example_code\": `\n// Optimize model loading for better performance\n// Implement LOD (Level of Detail) techniques\n`\n  }]\n}, {\n  \"topic_name\": \"Interactivity and User Input\",\n  \"topic_description\": \"Adding user interaction and controls to 3D scenes.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Mouse and Touch Events\",\n    \"example_code\": `\n// Detect mouse and touch events on 3D objects\n// Implement interactions like object selection and rotation\n`\n  }, {\n    \"subtopic_name\": \"Keyboard Input\",\n    \"example_code\": `\n// Capture keyboard input for controlling scenes or objects\n// Define custom keybindings and actions\n`\n  }, {\n    \"subtopic_name\": \"VR and AR Integration\",\n    \"example_code\": `\n// Integrate Three.js with WebXR for virtual and augmented reality experiences\n// Create immersive 3D environments for VR headsets\n`\n  }]\n}, {\n  \"topic_name\": \"Post-Processing Effects\",\n  \"topic_description\": \"Apply post-processing effects to enhance the visual quality of 3D scenes.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Bloom and HDR\",\n    \"example_code\": `\n// Add bloom and high dynamic range (HDR) effects\n// Improve scene illumination and realism\n`\n  }, {\n    \"subtopic_name\": \"Depth of Field\",\n    \"example_code\": `\n// Simulate depth of field (DOF) for a camera lens effect\n// Blur objects based on their distance from the camera\n`\n  }, {\n    \"subtopic_name\": \"Custom Shader Effects\",\n    \"example_code\": `\n// Create and apply custom post-processing shader effects\n// Achieve unique visual styles and effects\n`\n  }]\n}, {\n  \"topic_name\": \"WebGL and Performance\",\n  \"topic_description\": \"Understanding the underlying WebGL renderer for optimizing performance.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"WebGL Rendering Pipeline\",\n    \"example_code\": `\n// Learn about the WebGL rendering pipeline\n// Understand vertex and fragment shaders, buffers, and textures\n`\n  }, {\n    \"subtopic_name\": \"Performance Optimization\",\n    \"example_code\": `\n// Optimize performance through techniques like frustum culling\n// Minimize draw calls and use GPU acceleration\n`\n  }, {\n    \"subtopic_name\": \"Debugging and Profiling\",\n    \"example_code\": `\n// Debug and profile Three.js applications\n// Use browser developer tools and extensions for insights\n`\n  }]\n}, {\n  \"topic_name\": \"Exporting and Deployment\",\n  \"topic_description\": \"Preparing and deploying Three.js projects for the web.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Exporting 3D Scenes\",\n    \"example_code\": `\n// Export Three.js scenes to standalone files or formats\n// Prepare models and scenes for sharing and distribution\n`\n  }, {\n    \"subtopic_name\": \"Web Deployment\",\n    \"example_code\": `\n// Deploy Three.js projects to web servers or hosting platforms\n// Ensure compatibility and performance on various devices\n`\n  }, {\n    \"subtopic_name\": \"AR and Mobile Apps\",\n    \"example_code\": `\n// Adapt Three.js projects for augmented reality (AR) and mobile applications\n// Use frameworks like React Native or AR.js\n`\n  }]\n}, {\n  \"topic_name\": \"Community and Resources\",\n  \"topic_description\": \"Leverage the Three.js community and resources for learning and development.\",\n  \"subtopics\": [{\n    \"subtopic_name\": \"Official Documentation\",\n    \"example_code\": `\n// Explore the official Three.js documentation\n// Reference guides, examples, and API documentation\n`\n  }, {\n    \"subtopic_name\": \"Online Communities\",\n    \"example_code\": `\n// Join online communities and forums for discussions and support\n// Share your projects and seek advice from experts\n`\n  }, {\n    \"subtopic_name\": \"Tutorials and Courses\",\n    \"example_code\": `\n// Follow tutorials and online courses to master Three.js\n// Learn from experienced developers and educators\n`\n  }]\n}];\nexport default ThreeJsData;","map":{"version":3,"names":["subjectName","ThreeJsData"],"sources":["D:/Projects/educationWebsite/education-website/src/CoursesFolder/ThreeJs/ThreeJsData.js"],"sourcesContent":["export var subjectName = \"Three\"\r\nconst ThreeJsData = [\r\n    {\r\n        \"topic_name\": \"Introduction to Three.js\",\r\n        \"topic_description\": \"Three.js is a JavaScript library used for 3D graphics programming on the web. It provides tools and utilities for creating 3D scenes and animations.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Setting up Three.js\",\r\n                \"example_code\": `\r\n// Import Three.js library\r\nimport * as THREE from 'three';\r\n\r\n// Create a scene, camera, and renderer\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\nconst renderer = new THREE.WebGLRenderer();\r\n\r\n// Add renderer to the DOM\r\ndocument.body.appendChild(renderer.domElement);\r\n                `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating a Basic 3D Object\",\r\n                \"example_code\": `\r\n// Create a geometry (e.g., a cube)\r\nconst geometry = new THREE.BoxGeometry();\r\nconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\nconst cube = new THREE.Mesh(geometry, material);\r\n\r\n// Add the cube to the scene\r\nscene.add(cube);\r\n                `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Basic 3D Concepts\",\r\n        \"topic_description\": \"Understanding fundamental 3D concepts is crucial for working with Three.js effectively.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Coordinates and Axes\",\r\n                \"example_code\": `\r\n// Three.js uses a right-handed coordinate system\r\n// X-axis points right, Y-axis points up, Z-axis points out of the screen\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Cameras and Views\",\r\n                \"example_code\": `\r\n// Cameras define the view of the scene\r\n// PerspectiveCamera provides a perspective view, while OrthographicCamera is used for 2D-like views\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Lights\",\r\n                \"example_code\": `\r\n// Lights illuminate the scene\r\n// Common types: AmbientLight, DirectionalLight, PointLight, SpotLight\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Materials and Textures\",\r\n                \"example_code\": `\r\n// Materials define an object's appearance\r\n// Textures can be applied to materials to add details\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Geometry and Mesh\",\r\n        \"topic_description\": \"Geometry and mesh are essential components for creating 3D objects in Three.js.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Basic Geometries\",\r\n                \"example_code\": `\r\n// Common geometries: BoxGeometry, SphereGeometry, CylinderGeometry, PlaneGeometry\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating Custom Geometries\",\r\n                \"example_code\": `\r\n// Create custom geometries by defining vertices and faces\r\n// Use BufferGeometry for better performance\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Mesh Properties\",\r\n                \"example_code\": `\r\n// Mesh combines a geometry and a material\r\n// Position, rotation, and scale can be manipulated\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Materials and Shading\",\r\n        \"topic_description\": \"Materials determine how an object appears when rendered.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Basic Materials\",\r\n                \"example_code\": `\r\n// MeshBasicMaterial: Simple shading with no lighting\r\n// MeshLambertMaterial: Diffuse shading (matte appearance)\r\n// MeshPhongMaterial: Phong shading (specular highlights)\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Texture Mapping\",\r\n                \"example_code\": `\r\n// Apply textures to materials for realistic surfaces\r\n// Load textures with TextureLoader\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Custom Shaders\",\r\n                \"example_code\": `\r\n// Write custom shaders using GLSL for advanced materials and effects\r\n// Use ShaderMaterial to apply custom shaders to objects\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Lights and Shadows\",\r\n        \"topic_description\": \"Lights and shadows play a significant role in creating realistic 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Types of Lights\",\r\n                \"example_code\": `\r\n// DirectionalLight: Simulates distant light (e.g., sunlight)\r\n// PointLight: Radiates light in all directions from a point\r\n// SpotLight: Emits light in a cone shape\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Adding Shadows\",\r\n                \"example_code\": `\r\n// Enable shadows in the renderer and lights\r\n// Adjust properties like shadowMapSize and shadowBias\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Shadow Mapping\",\r\n                \"example_code\": `\r\n// Shadow mapping techniques for creating realistic shadows\r\n// Depth texture and shaders are used to calculate shadows\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Animation in Three.js\",\r\n        \"topic_description\": \"Animating objects and scenes is a crucial aspect of 3D development.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Basic Animations\",\r\n                \"example_code\": `\r\n// Use the requestAnimationFrame loop for smooth animations\r\n// Update object properties (e.g., position, rotation) over time\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Keyframe Animations\",\r\n                \"example_code\": `\r\n// Create keyframe animations using libraries like Tween.js\r\n// Define keyframes and easing functions\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Physics Simulations\",\r\n                \"example_code\": `\r\n// Integrate physics engines like Cannon.js for realistic simulations\r\n// Simulate dynamics, collisions, and forces\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Loading 3D Models\",\r\n        \"topic_description\": \"Loading external 3D models and assets into Three.js.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using 3D Model Formats\",\r\n                \"example_code\": `\r\n// Load 3D models in common formats like OBJ, GLTF, FBX\r\n// Use loaders (e.g., GLTFLoader) to import models\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Manipulating Imported Models\",\r\n                \"example_code\": `\r\n// Adjust model position, scale, and rotation\r\n// Animate imported models along with the scene\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Optimizing Model Loading\",\r\n                \"example_code\": `\r\n// Optimize model loading for better performance\r\n// Implement LOD (Level of Detail) techniques\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Interactivity and User Input\",\r\n        \"topic_description\": \"Adding user interaction and controls to 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Mouse and Touch Events\",\r\n                \"example_code\": `\r\n// Detect mouse and touch events on 3D objects\r\n// Implement interactions like object selection and rotation\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Keyboard Input\",\r\n                \"example_code\": `\r\n// Capture keyboard input for controlling scenes or objects\r\n// Define custom keybindings and actions\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"VR and AR Integration\",\r\n                \"example_code\": `\r\n// Integrate Three.js with WebXR for virtual and augmented reality experiences\r\n// Create immersive 3D environments for VR headsets\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Post-Processing Effects\",\r\n        \"topic_description\": \"Apply post-processing effects to enhance the visual quality of 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Bloom and HDR\",\r\n                \"example_code\": `\r\n// Add bloom and high dynamic range (HDR) effects\r\n// Improve scene illumination and realism\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Depth of Field\",\r\n                \"example_code\": `\r\n// Simulate depth of field (DOF) for a camera lens effect\r\n// Blur objects based on their distance from the camera\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Custom Shader Effects\",\r\n                \"example_code\": `\r\n// Create and apply custom post-processing shader effects\r\n// Achieve unique visual styles and effects\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"WebGL and Performance\",\r\n        \"topic_description\": \"Understanding the underlying WebGL renderer for optimizing performance.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"WebGL Rendering Pipeline\",\r\n                \"example_code\": `\r\n// Learn about the WebGL rendering pipeline\r\n// Understand vertex and fragment shaders, buffers, and textures\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Performance Optimization\",\r\n                \"example_code\": `\r\n// Optimize performance through techniques like frustum culling\r\n// Minimize draw calls and use GPU acceleration\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Debugging and Profiling\",\r\n                \"example_code\": `\r\n// Debug and profile Three.js applications\r\n// Use browser developer tools and extensions for insights\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Exporting and Deployment\",\r\n        \"topic_description\": \"Preparing and deploying Three.js projects for the web.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Exporting 3D Scenes\",\r\n                \"example_code\": `\r\n// Export Three.js scenes to standalone files or formats\r\n// Prepare models and scenes for sharing and distribution\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Web Deployment\",\r\n                \"example_code\": `\r\n// Deploy Three.js projects to web servers or hosting platforms\r\n// Ensure compatibility and performance on various devices\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"AR and Mobile Apps\",\r\n                \"example_code\": `\r\n// Adapt Three.js projects for augmented reality (AR) and mobile applications\r\n// Use frameworks like React Native or AR.js\r\n`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Community and Resources\",\r\n        \"topic_description\": \"Leverage the Three.js community and resources for learning and development.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Official Documentation\",\r\n                \"example_code\": `\r\n// Explore the official Three.js documentation\r\n// Reference guides, examples, and API documentation\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Online Communities\",\r\n                \"example_code\": `\r\n// Join online communities and forums for discussions and support\r\n// Share your projects and seek advice from experts\r\n`\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Tutorials and Courses\",\r\n                \"example_code\": `\r\n// Follow tutorials and online courses to master Three.js\r\n// Learn from experienced developers and educators\r\n`\r\n            }\r\n        ]\r\n    },\r\n    \r\n];\r\nexport default ThreeJsData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}