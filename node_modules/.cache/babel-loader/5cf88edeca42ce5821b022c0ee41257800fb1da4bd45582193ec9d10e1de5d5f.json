{"ast":null,"code":"const runCode = () => {\n  const outputFrame = document.getElementById('output');\n  const outputDocument = outputFrame.contentDocument || outputFrame.contentWindow.document;\n  outputDocument.body.innerHTML = '';\n\n  // Override console.log to capture the output\n  const logs = [];\n  const originalConsoleLog = console.log;\n  console.log = (...args) => {\n    logs.push(args.map(arg => JSON.stringify(arg)).join(' '));\n    originalConsoleLog(...args);\n  };\n  try {\n    // Execute the code\n    eval(code);\n\n    // Display captured logs\n    logs.forEach(log => {\n      const pre = outputDocument.createElement('pre');\n      pre.appendChild(outputDocument.createTextNode(log));\n      outputDocument.body.appendChild(pre);\n    });\n  } catch (error) {\n    // Display errors\n    const pre = outputDocument.createElement('pre');\n    pre.style.color = 'red';\n    pre.appendChild(outputDocument.createTextNode(error.toString()));\n    outputDocument.body.appendChild(pre);\n  } finally {\n    // Restore console.log to its original state\n    console.log = originalConsoleLog;\n  }\n};","map":{"version":3,"names":["runCode","outputFrame","document","getElementById","outputDocument","contentDocument","contentWindow","body","innerHTML","logs","originalConsoleLog","console","log","args","push","map","arg","JSON","stringify","join","eval","code","forEach","pre","createElement","appendChild","createTextNode","error","style","color","toString"],"sources":["D:/Projects/educationWebsite/education-website/src/HomePage/Navbar/NavbarRouting/CodeEditor.jsx"],"sourcesContent":["const runCode = () => {\r\n  const outputFrame = document.getElementById('output');\r\n  const outputDocument = outputFrame.contentDocument || outputFrame.contentWindow.document;\r\n\r\n  outputDocument.body.innerHTML = '';\r\n\r\n  // Override console.log to capture the output\r\n  const logs = [];\r\n  const originalConsoleLog = console.log;\r\n  console.log = (...args) => {\r\n    logs.push(args.map(arg => JSON.stringify(arg)).join(' '));\r\n    originalConsoleLog(...args);\r\n  };\r\n\r\n  try {\r\n    // Execute the code\r\n    eval(code);\r\n\r\n    // Display captured logs\r\n    logs.forEach(log => {\r\n      const pre = outputDocument.createElement('pre');\r\n      pre.appendChild(outputDocument.createTextNode(log));\r\n      outputDocument.body.appendChild(pre);\r\n    });\r\n  } catch (error) {\r\n    // Display errors\r\n    const pre = outputDocument.createElement('pre');\r\n    pre.style.color = 'red';\r\n    pre.appendChild(outputDocument.createTextNode(error.toString()));\r\n    outputDocument.body.appendChild(pre);\r\n  } finally {\r\n    // Restore console.log to its original state\r\n    console.log = originalConsoleLog;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;EACrD,MAAMC,cAAc,GAAGH,WAAW,CAACI,eAAe,IAAIJ,WAAW,CAACK,aAAa,CAACJ,QAAQ;EAExFE,cAAc,CAACG,IAAI,CAACC,SAAS,GAAG,EAAE;;EAElC;EACA,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAG;EACtCD,OAAO,CAACC,GAAG,GAAG,CAAC,GAAGC,IAAI,KAAK;IACzBJ,IAAI,CAACK,IAAI,CAACD,IAAI,CAACE,GAAG,CAACC,GAAG,IAAIC,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;IACzDT,kBAAkB,CAAC,GAAGG,IAAI,CAAC;EAC7B,CAAC;EAED,IAAI;IACF;IACAO,IAAI,CAACC,IAAI,CAAC;;IAEV;IACAZ,IAAI,CAACa,OAAO,CAACV,GAAG,IAAI;MAClB,MAAMW,GAAG,GAAGnB,cAAc,CAACoB,aAAa,CAAC,KAAK,CAAC;MAC/CD,GAAG,CAACE,WAAW,CAACrB,cAAc,CAACsB,cAAc,CAACd,GAAG,CAAC,CAAC;MACnDR,cAAc,CAACG,IAAI,CAACkB,WAAW,CAACF,GAAG,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd;IACA,MAAMJ,GAAG,GAAGnB,cAAc,CAACoB,aAAa,CAAC,KAAK,CAAC;IAC/CD,GAAG,CAACK,KAAK,CAACC,KAAK,GAAG,KAAK;IACvBN,GAAG,CAACE,WAAW,CAACrB,cAAc,CAACsB,cAAc,CAACC,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChE1B,cAAc,CAACG,IAAI,CAACkB,WAAW,CAACF,GAAG,CAAC;EACtC,CAAC,SAAS;IACR;IACAZ,OAAO,CAACC,GAAG,GAAGF,kBAAkB;EAClC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}