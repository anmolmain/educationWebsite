[{"D:\\Projects\\educationWebsite\\education-website\\src\\index.js":"1","D:\\Projects\\educationWebsite\\education-website\\src\\App.js":"2","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\HomePage.js":"3","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\Navbar.js":"4","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\LandingSection\\LandingPage.js":"5","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\AdvSection\\Adv.js":"6","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\OurSpecialSection\\Special.js":"7","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\OurSpecialSection\\SpecialOfferCards\\SpecialOfferCard.js":"8","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\PopularCourses\\PopularCourses.js":"9","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Footer\\Footer.js":"10","D:\\Projects\\educationWebsite\\education-website\\src\\App.test.js":"11","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Cara\\Cara.jsx":"12","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\Courses.jsx":"13","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\DigitalNotes.jsx":"14","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\Contact.jsx":"15","D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\PopularCourses\\MostPopText.jsx":"16","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Css\\CssCourse.jsx":"17","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Css\\CssCourseData.js":"18","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Html\\HtmlCourse.jsx":"19","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Html\\htmlCourseData.js":"20","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Template.jsx":"21","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\JavaScript\\JSCourse.js":"22","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\JavaScript\\javaScriptCourseData.js":"23","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Bootstrap\\BootstrapCourse.jsx":"24","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Bootstrap\\BootstrapData.js":"25","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\MongoDb\\MongoDbCourse.jsx":"26","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\MongoDb\\MongoDbData.js":"27","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\React\\ReactCourse.jsx":"28","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\React\\ReactCourseData.js":"29","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Express\\ExpressCourse.jsx":"30","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Express\\ExpressCourseData.js":"31","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NodeJs\\NodeJsCourse.jsx":"32","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NodeJs\\NodeJsCourseData.js":"33","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NextJs\\NextJsCourse.jsx":"34","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NextJs\\NextJsCourseData.js":"35","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\ThreeJs\\ThreeJsData.js":"36","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\ThreeJs\\ThreeJsCourse.jsx":"37","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Web3js\\Web3jsCourse.jsx":"38","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Web3js\\Web3jsCourseData.js":"39","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Jquery\\JqueryCourse.jsx":"40","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Jquery\\JqueryCourseData.js":"41","D:\\Projects\\educationWebsite\\education-website\\src\\NotFound404\\NotFound404.jsx":"42"},{"size":445,"mtime":1694376558501,"results":"43","hashOfConfig":"44"},{"size":2688,"mtime":1696624347953,"results":"45","hashOfConfig":"44"},{"size":690,"mtime":1696707822432,"results":"46","hashOfConfig":"44"},{"size":2340,"mtime":1696710975919,"results":"47","hashOfConfig":"44"},{"size":2041,"mtime":1696710131729,"results":"48","hashOfConfig":"44"},{"size":1338,"mtime":1694696589635,"results":"49","hashOfConfig":"44"},{"size":1402,"mtime":1696710182020,"results":"50","hashOfConfig":"44"},{"size":2181,"mtime":1696710275291,"results":"51","hashOfConfig":"44"},{"size":13461,"mtime":1696708951516,"results":"52","hashOfConfig":"44"},{"size":3617,"mtime":1694699635453,"results":"53","hashOfConfig":"44"},{"size":246,"mtime":1694373670186,"results":"54","hashOfConfig":"44"},{"size":2241,"mtime":1696183356267,"results":"55","hashOfConfig":"44"},{"size":1099,"mtime":1696597158105,"results":"56","hashOfConfig":"44"},{"size":642,"mtime":1696710808733,"results":"57","hashOfConfig":"44"},{"size":184,"mtime":1696185285786,"results":"58","hashOfConfig":"44"},{"size":487,"mtime":1696710321495,"results":"59","hashOfConfig":"44"},{"size":326,"mtime":1696584433864,"results":"60","hashOfConfig":"44"},{"size":21209,"mtime":1696568658862,"results":"61","hashOfConfig":"44"},{"size":360,"mtime":1696707651210,"results":"62","hashOfConfig":"44"},{"size":16370,"mtime":1696707789167,"results":"63","hashOfConfig":"44"},{"size":2859,"mtime":1696623330675,"results":"64","hashOfConfig":"44"},{"size":348,"mtime":1696585849218,"results":"65","hashOfConfig":"44"},{"size":17419,"mtime":1696585662784,"results":"66","hashOfConfig":"44"},{"size":353,"mtime":1696587373246,"results":"67","hashOfConfig":"44"},{"size":39544,"mtime":1696587356894,"results":"68","hashOfConfig":"44"},{"size":341,"mtime":1696588709595,"results":"69","hashOfConfig":"44"},{"size":37581,"mtime":1696588408825,"results":"70","hashOfConfig":"44"},{"size":317,"mtime":1696589571033,"results":"71","hashOfConfig":"44"},{"size":24858,"mtime":1696589525616,"results":"72","hashOfConfig":"44"},{"size":341,"mtime":1696590585681,"results":"73","hashOfConfig":"44"},{"size":28076,"mtime":1696590730295,"results":"74","hashOfConfig":"44"},{"size":356,"mtime":1696591456996,"results":"75","hashOfConfig":"44"},{"size":30935,"mtime":1696591415098,"results":"76","hashOfConfig":"44"},{"size":358,"mtime":1696592727453,"results":"77","hashOfConfig":"44"},{"size":42105,"mtime":1696593362586,"results":"78","hashOfConfig":"44"},{"size":11569,"mtime":1696593073256,"results":"79","hashOfConfig":"44"},{"size":341,"mtime":1696593136716,"results":"80","hashOfConfig":"44"},{"size":356,"mtime":1696593635354,"results":"81","hashOfConfig":"44"},{"size":23367,"mtime":1696593808367,"results":"82","hashOfConfig":"44"},{"size":356,"mtime":1696594019294,"results":"83","hashOfConfig":"44"},{"size":27549,"mtime":1696594406870,"results":"84","hashOfConfig":"44"},{"size":454,"mtime":1696709530383,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"hlmutm",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"89"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"89"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"89"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},"D:\\Projects\\educationWebsite\\education-website\\src\\index.js",[],[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\App.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\HomePage.js",[],[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\Navbar.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\LandingSection\\LandingPage.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\AdvSection\\Adv.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\OurSpecialSection\\Special.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\OurSpecialSection\\SpecialOfferCards\\SpecialOfferCard.js",["220"],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\PopularCourses\\PopularCourses.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Footer\\Footer.js",["221","222","223","224"],[],"import React from 'react'\r\nimport './footer.css'\r\nimport githubLogo from './githubLogo.png'\r\nimport footerLogo from './footerLogo.png'\r\n\r\nconst Footer = () => {\r\n    const tDate = new Date();\r\n    let tYear = tDate.getFullYear();\r\n    console.log(tYear);\r\n    return (\r\n        <div><br /><br />\r\n            <div className=\"ResAndIns\">\r\n                <p id='FooterHeading' className='col-12'>Resources and Insigts</p>\r\n            </div>\r\n            <div className='fullDiv row'>\r\n                <div className=\"imgageDiv col-md-3\">\r\n                    <img id='divImg' src={footerLogo} alt=\"\" />\r\n                </div>\r\n                <div className=\"TextDiv col-md-8\">\r\n                    <div className=\"col-1\">\r\n                        <div id=\"VerticalHrTag\"></div>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <p className='AboutUsHeadingFooter'>\r\n                            About\r\n                        </p>\r\n                        <hr className='myHrTag' />\r\n                        <p className=\"AboutUsTextFooter\">\r\n                            At CheatSheet Mania, we are committed to fostering a lifelong love for learning. Our mission is to empower individuals of all ages and backgrounds to pursue their educational goals and unlock their full potential.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <div id=\"VerticalHrTag\"></div>\r\n                    </div>\r\n\r\n                    <div className=\" AboutUsHeadingFooter col-5\">\r\n                        <p className=''>Contact US</p>\r\n                        <hr className='myHrTag' />\r\n                        <p className=\"AboutUsTextFooter\">\r\n\r\n                            XYZ street\r\n                            Mycity , MyState - India\r\n                            Phone: 1234567890\r\n                            Email: email123@email.com\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"myLinks row\" >\r\n                        <div className=\"row imageLinks\">\r\n                            <div className=\"col-3\">\r\n                                <a href=\"#\">\r\n                                    <img className='linkedImages' src={githubLogo} alt=\"\" />\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <a href=\"#\">\r\n                                    <img className='linkedImages' src={githubLogo} alt=\"\" />\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <a href=\"#\">\r\n                                    <img className='linkedImages' src={githubLogo} alt=\"\" />\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <a href=\"#\">\r\n                                    <img className='linkedImages' src={githubLogo} alt=\"\" />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"bottomRowc row\">\r\n                        <div className=\"col-12 bottomLayer\">Copyright @{tYear} CheatSheet Mania (dummyWebsite)</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Footer","D:\\Projects\\educationWebsite\\education-website\\src\\App.test.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Cara\\Cara.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\Courses.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\DigitalNotes.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\Navbar\\NavbarRouting\\Contact.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\HomePage\\PopularCourses\\MostPopText.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Css\\CssCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Css\\CssCourseData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Html\\HtmlCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Html\\htmlCourseData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Template.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\JavaScript\\JSCourse.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\JavaScript\\javaScriptCourseData.js",["225","226"],[],"var javaScriptData = [\r\n    {\r\n        \"topic_name\": \"Variables and Data Types\",\r\n        \"topic_description\": \"JavaScript variables can store data of different types, including numbers, strings, and objects.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Declaring Variables\",\r\n                \"example_code\": \"let variableName = 'Hello, World!';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Data Types\",\r\n                \"example_code\": \"let num = 42;\\nlet str = 'Hello';\\nlet bool = true;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Type Conversion\",\r\n                \"example_code\": \"let numStr = '42';\\nlet num = parseInt(numStr);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Functions\",\r\n        \"topic_description\": \"Functions in JavaScript are reusable blocks of code that can take parameters and return values.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Defining Functions\",\r\n                \"example_code\": \"function functionName() {\\n  // Code here\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Function Parameters\",\r\n                \"example_code\": \"function greet(name) {\\n  return 'Hello, ' + name;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Conditional Statements\",\r\n        \"topic_description\": \"Conditional statements allow you to execute different code based on specified conditions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"if Statement\",\r\n                \"example_code\": \"if (condition) {\\n  // Code to execute if condition is true\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"else Statement\",\r\n                \"example_code\": \"if (condition) {\\n  // Code if true\\n} else {\\n  // Code if false\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Switch Statement\",\r\n                \"example_code\": \"switch (value) {\\n  case 1:\\n    // Code for case 1\\n    break;\\n  case 2:\\n    // Code for case 2\\n    break;\\n  default:\\n    // Default code\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Loops\",\r\n        \"topic_description\": \"Loops allow you to repeatedly execute code until a specified condition is met.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"for Loop\",\r\n                \"example_code\": \"for (let i = 0; i < 5; i++) {\\n  // Code to repeat\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"while Loop\",\r\n                \"example_code\": \"let i = 0;\\nwhile (i < 5) {\\n  // Code to repeat\\n  i++;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"forEach Loop\",\r\n                \"example_code\": \"array.forEach(item => {\\n  // Code for each item\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Arrays\",\r\n        \"topic_description\": \"Arrays are ordered lists of values that can be accessed by index.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Arrays\",\r\n                \"example_code\": \"let fruits = ['apple', 'banana', 'cherry'];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Accessing Elements\",\r\n                \"example_code\": \"let firstFruit = fruits[0];\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Array Methods\",\r\n                \"example_code\": \"fruits.push('orange');\\nfruits.pop();\\nfruits.length;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Objects\",\r\n        \"topic_description\": \"Objects in JavaScript store collections of key-value pairs.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Objects\",\r\n                \"example_code\": \"let person = {\\n  firstName: 'John',\\n  lastName: 'Doe'\\n};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Accessing Properties\",\r\n                \"example_code\": \"let firstName = person.firstName;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Object Methods\",\r\n                \"example_code\": \"person.sayHello = function() {\\n  return 'Hello, ' + this.firstName;\\n};\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"DOM Manipulation\",\r\n        \"topic_description\": \"The Document Object Model (DOM) allows you to manipulate HTML elements and their properties.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Selecting Elements\",\r\n                \"example_code\": \"document.getElementById('elementId');\\ndocument.querySelector('.className');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Changing HTML Content\",\r\n                \"example_code\": \"element.innerHTML = 'New content';\\nelement.textContent = 'Text content';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Event Handling\",\r\n                \"example_code\": \"element.addEventListener('click', function() {\\n  // Event handler code\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Asynchronous Programming\",\r\n        \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Promises\",\r\n                \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching Data with fetch\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Async/Await\",\r\n                \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"ES6 Features\",\r\n        \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Template Literals\",\r\n                \"example_code\": \"const message = `Hello, ${name}`;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Destructuring Assignment\",\r\n                \"example_code\": \"const { firstName, lastName } = person;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"try...catch Statement\",\r\n                \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Throwing Custom Errors\",\r\n                \"example_code\": \"throw new Error('Custom error message');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Promise Errors\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Modules\",\r\n        \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Exporting Modules\",\r\n                \"example_code\": \"export const functionName = () => {...};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"import { functionName } from './module.js';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Default Exports\",\r\n                \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Local Storage\",\r\n        \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Storing Data\",\r\n                \"example_code\": \"localStorage.setItem('key', 'value');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Retrieving Data\",\r\n                \"example_code\": \"const data = localStorage.getItem('key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Removing Data\",\r\n                \"example_code\": \"localStorage.removeItem('key');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Regular Expressions\",\r\n        \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Regex\",\r\n                \"example_code\": \"/pattern/;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Matching Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Replacing Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"JSON\",\r\n        \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Parsing JSON\",\r\n                \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Stringifying JSON\",\r\n                \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Date and Time\",\r\n        \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Date Objects\",\r\n                \"example_code\": \"const currentDate = new Date();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Getting Date Components\",\r\n                \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Formatting Dates\",\r\n                \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Asynchronous Programming\",\r\n        \"topic_description\": \"Promises are used for asynchronous operations in JavaScript, such as fetching data from a server.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Promises\",\r\n                \"example_code\": \"const fetchData = new Promise((resolve, reject) => {\\n  // Asynchronous code\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching Data with fetch\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .then(response => response.json())\\n  .then(data => {\\n    // Process data\\n  });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Async/Await\",\r\n                \"example_code\": \"async function getData() {\\n  try {\\n    const response = await fetch('https://api.example.com/data');\\n    const data = await response.json();\\n  } catch (error) {\\n    // Handle error\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"ES6 Features\",\r\n        \"topic_description\": \"ES6 introduced several new features and syntax enhancements to JavaScript.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Arrow Functions\",\r\n                \"example_code\": \"const add = (a, b) => a + b;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Template Literals\",\r\n                \"example_code\": \"const message = `Hello, ${name}`;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Destructuring Assignment\",\r\n                \"example_code\": \"const { firstName, lastName } = person;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Error handling in JavaScript helps catch and handle runtime errors.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"try...catch Statement\",\r\n                \"example_code\": \"try {\\n  // Code that may throw an error\\n} catch (error) {\\n  // Handle the error\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Throwing Custom Errors\",\r\n                \"example_code\": \"throw new Error('Custom error message');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Promise Errors\",\r\n                \"example_code\": \"fetch('https://api.example.com/data')\\n  .catch(error => {\\n    // Handle fetch error\\n  });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Modules\",\r\n        \"topic_description\": \"JavaScript modules help organize and encapsulate code into reusable components.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Exporting Modules\",\r\n                \"example_code\": \"export const functionName = () => {...};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"import { functionName } from './module.js';\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Default Exports\",\r\n                \"example_code\": \"export default function() {...};\\nimport myFunction from './module.js';\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Local Storage\",\r\n        \"topic_description\": \"Local storage allows you to store data on the user's device for persistent storage.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Storing Data\",\r\n                \"example_code\": \"localStorage.setItem('key', 'value');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Retrieving Data\",\r\n                \"example_code\": \"const data = localStorage.getItem('key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Removing Data\",\r\n                \"example_code\": \"localStorage.removeItem('key');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Regular Expressions\",\r\n        \"topic_description\": \"Regular expressions (regex) are patterns used for string matching and manipulation.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Regex\",\r\n                \"example_code\": \"/pattern/;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Matching Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst result = text.match(pattern);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Replacing Strings\",\r\n                \"example_code\": \"const text = 'Hello, World!';\\nconst pattern = /Hello/;\\nconst replacement = 'Hi';\\nconst result = text.replace(pattern, replacement);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"JSON\",\r\n        \"topic_description\": \"JSON (JavaScript Object Notation) is a lightweight data interchange format.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Parsing JSON\",\r\n                \"example_code\": \"const jsonString = '{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}';\\nconst data = JSON.parse(jsonString);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Stringifying JSON\",\r\n                \"example_code\": \"const data = { name: 'John', age: 30, city: 'New York' };\\nconst jsonString = JSON.stringify(data);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Date and Time\",\r\n        \"topic_description\": \"JavaScript provides date and time manipulation capabilities.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Date Objects\",\r\n                \"example_code\": \"const currentDate = new Date();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Getting Date Components\",\r\n                \"example_code\": \"const year = currentDate.getFullYear();\\nconst month = currentDate.getMonth();\\nconst day = currentDate.getDate();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Formatting Dates\",\r\n                \"example_code\": \"const formattedDate = currentDate.toLocaleDateString();\"\r\n            }\r\n        ]\r\n    }\r\n    // Add more topics and subtopics as needed\r\n];\r\n\r\n// console.log(javaScriptData[0]);\r\nexport default javaScriptData;\r\n","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Bootstrap\\BootstrapCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Bootstrap\\BootstrapData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\MongoDb\\MongoDbCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\MongoDb\\MongoDbData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\React\\ReactCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\React\\ReactCourseData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Express\\ExpressCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Express\\ExpressCourseData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NodeJs\\NodeJsCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NodeJs\\NodeJsCourseData.js",["227","228","229","230"],[],"var NodeJsCourseData = [\r\n    {\r\n        \"topic_name\": \"Modules in Node.js\",\r\n        \"topic_description\": \"Node.js uses a module system to organize code into reusable files. You can create your own modules and use built-in ones.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Module\",\r\n                \"example_code\": \"/* mymodule.js */\\n\\nfunction greet(name) {\\n  return `Hello, ${name}!`;\\n}\\n\\nmodule.exports = greet;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using a Module\",\r\n                \"example_code\": \"const mymodule = require('./mymodule');\\nconst message = mymodule('Alice');\\nconsole.log(message); // Hello, Alice!\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Built-in Modules\",\r\n                \"example_code\": \"const fs = require('fs');\\nconst http = require('http');\\nconst path = require('path');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Asynchronous Programming\",\r\n        \"topic_description\": \"Node.js is designed for asynchronous programming using callbacks, promises, and async/await.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Callbacks\",\r\n                \"example_code\": \"fs.readFile('file.txt', (err, data) => {\\n  if (err) throw err;\\n  console.log(data.toString());\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Promises\",\r\n                \"example_code\": \"const readFileAsync = util.promisify(fs.readFile);\\nreadFileAsync('file.txt')\\n  .then(data => console.log(data.toString()))\\n  .catch(err => console.error(err));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using async/await\",\r\n                \"example_code\": \"const readData = async () => {\\n  try {\\n    const data = await readFileAsync('file.txt');\\n    console.log(data.toString());\\n  } catch (err) {\\n    console.error(err);\\n  }\\n};\\nreadData();\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"File System Operations\",\r\n        \"topic_description\": \"Perform various file operations like creating, reading, writing, and deleting files using the 'fs' module.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Reading a File\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.readFile('file.txt', 'utf8', (err, data) => {\\n  if (err) throw err;\\n  console.log(data);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Writing to a File\",\r\n                \"example_code\": \"const fs = require('fs');\\nconst content = 'Hello, Node.js!';\\nfs.writeFile('output.txt', content, (err) => {\\n  if (err) throw err;\\n  console.log('File saved.');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Deleting a File\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.unlink('file.txt', (err) => {\\n  if (err) throw err;\\n  console.log('File deleted.');\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Directories\",\r\n        \"topic_description\": \"Manipulate directories, including creating, reading, renaming, and deleting directories.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Directory\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.mkdir('mydir', (err) => {\\n  if (err) throw err;\\n  console.log('Directory created.');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Reading a Directory\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.readdir('mydir', (err, files) => {\\n  if (err) throw err;\\n  console.log('Files in directory:', files);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Renaming a Directory\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.rename('mydir', 'newdir', (err) => {\\n  if (err) throw err;\\n  console.log('Directory renamed.');\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"File and Directory Information\",\r\n        \"topic_description\": \"Retrieve information about files and directories, such as file size, permissions, and timestamps.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"File Stats\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.stat('file.txt', (err, stats) => {\\n  if (err) throw err;\\n  console.log('File size:', stats.size, 'bytes');\\n  console.log('Is directory?', stats.isDirectory());\\n  console.log('Last modified:', stats.mtime);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Directory Stats\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.stat('mydir', (err, stats) => {\\n  if (err) throw err;\\n  console.log('Is directory?', stats.isDirectory());\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"File Permissions\",\r\n                \"example_code\": \"const fs = require('fs');\\nfs.chmod('file.txt', 0o755, (err) => {\\n  if (err) throw err;\\n  console.log('Permissions changed.');\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"HTTP Server\",\r\n        \"topic_description\": \"Node.js can create HTTP servers for building web applications and APIs.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating an HTTP Server\",\r\n                \"example_code\": \"const http = require('http');\\n\\nconst server = http.createServer((req, res) => {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.end('Hello, World!');\\n});\\n\\nconst port = 3000;\\nserver.listen(port, () => {\\n  console.log(`Server running at http://localhost:${port}/`);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Routes\",\r\n                \"example_code\": \"const http = require('http');\\n\\nconst server = http.createServer((req, res) => {\\n  if (req.url === '/') {\\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\\n    res.end('Home Page');\\n  } else if (req.url === '/about') {\\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\\n    res.end('About Page');\\n  } else {\\n    res.writeHead(404, { 'Content-Type': 'text/plain' });\\n    res.end('Not Found');\\n  }\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling POST Requests\",\r\n                \"example_code\": \"const http = require('http');\\n\\nconst server = http.createServer((req, res) => {\\n  if (req.method === 'POST') {\\n    let body = '';\\n    req.on('data', (chunk) => {\\n      body += chunk;\\n    });\\n    req.on('end', () => {\\n      console.log('Received POST data:', body);\\n      res.end('Data received.');\\n    });\\n  }\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Express.js Framework\",\r\n        \"topic_description\": \"Express.js is a popular Node.js framework for building web applications and APIs. It simplifies routing, middleware, and more.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installing Express.js\",\r\n                \"example_code\": \"const express = require('express');\\nconst app = express();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating Routes\",\r\n                \"example_code\": \"app.get('/', (req, res) => {\\n  res.send('Home Page');\\n});\\n\\napp.get('/about', (req, res) => {\\n  res.send('About Page');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Middleware\",\r\n                \"example_code\": \"app.use(express.json());\\napp.use(express.urlencoded({ extended: true }));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Database Integration\",\r\n        \"topic_description\": \"Node.js can connect to various databases such as MongoDB, MySQL, and PostgreSQL.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using MongoDB with Mongoose\",\r\n                \"example_code\": \"const mongoose = require('mongoose');\\nmongoose.connect('mongodb://localhost/mydb', { useNewUrlParser: true });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using MySQL with Sequelize\",\r\n                \"example_code\": \"const Sequelize = require('sequelize');\\nconst sequelize = new Sequelize('database', 'username', 'password', { dialect: 'mysql' });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication and Authorization\",\r\n        \"topic_description\": \"Implement user authentication and authorization in Node.js applications using libraries like Passport.js.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Passport.js\",\r\n                \"example_code\": \"const passport = require('passport');\\nconst LocalStrategy = require('passport-local').Strategy;\\n\\npassport.use(new LocalStrategy((username, password, done) => {\\n  // Verify user credentials\\n}));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"JWT Authentication\",\r\n                \"example_code\": \"const jwt = require('jsonwebtoken');\\nconst token = jwt.sign({ userId: 123 }, 'secretKey');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"WebSocket Communication\",\r\n        \"topic_description\": \"Implement real-time communication in Node.js using WebSocket libraries like Socket.io.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Socket.io\",\r\n                \"example_code\": \"const http = require('http');\\nconst server = http.createServer(app);\\nconst io = require('socket.io')(server);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling WebSocket Events\",\r\n                \"example_code\": \"io.on('connection', (socket) => {\\n  console.log('A user connected');\\n  socket.on('chat message', (message) => {\\n    io.emit('chat message', message);\\n  });\\n  socket.on('disconnect', () => {\\n    console.log('A user disconnected');\\n  });\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"RESTful APIs\",\r\n        \"topic_description\": \"Build RESTful APIs in Node.js for creating, reading, updating, and deleting resources.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating API Endpoints\",\r\n                \"example_code\": \"app.get('/api/posts', (req, res) => {\\n  // Retrieve and send a list of posts\\n});\\n\\napp.post('/api/posts', (req, res) => {\\n  // Create a new post\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Authentication\",\r\n                \"example_code\": \"const authenticate = (req, res, next) => {\\n  // Implement authentication logic\\n  next();\\n};\\n\\napp.use('/api', authenticate);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Validation\",\r\n                \"example_code\": \"const validate = (req, res, next) => {\\n  // Implement request validation\\n  next();\\n};\\n\\napp.use('/api', validate);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Implement error handling strategies in Node.js applications to handle unexpected issues gracefully.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Custom Error Handling Middleware\",\r\n                \"example_code\": \"app.use((err, req, res, next) => {\\n  console.error(err.stack);\\n  res.status(500).send('Something went wrong!');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling 404 Errors\",\r\n                \"example_code\": \"app.use((req, res) => {\\n  res.status(404).send('Not Found');\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing Node.js Applications\",\r\n        \"topic_description\": \"Write unit and integration tests for Node.js applications using testing frameworks like Mocha and Jest.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Mocha\",\r\n                \"example_code\": \"const assert = require('assert');\\ndescribe('Array', () => {\\n  it('should return -1 when the value is not present', () => {\\n    assert.equal([1, 2, 3].indexOf(4), -1);\\n  });\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Jest\",\r\n                \"example_code\": \"test('adds 1 + 2 to equal 3', () => {\\n  expect(sum(1, 2)).toBe(3);\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Async/Await\",\r\n        \"topic_description\": \"Learn about Promises and Async/Await in JavaScript for handling asynchronous operations effectively.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Promise\",\r\n                \"example_code\": \"const fetchData = () => {\\n  return new Promise((resolve, reject) => {\\n    // Perform an async operation\\n  });\\n};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Async/Await\",\r\n                \"example_code\": \"const fetchData = async () => {\\n  try {\\n    const data = await fetchData();\\n    console.log(data);\\n  } catch (error) {\\n    console.error(error);\\n  }\\n};\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Event Emitters\",\r\n        \"topic_description\": \"Node.js provides Event Emitters for building custom event-driven architectures.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating an Event Emitter\",\r\n                \"example_code\": \"const EventEmitter = require('events');\\nclass MyEmitter extends EventEmitter {}\\nconst myEmitter = new MyEmitter();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Listening for Events\",\r\n                \"example_code\": \"myEmitter.on('event', () => {\\n  console.log('Event occurred');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Emitting Events\",\r\n                \"example_code\": \"myEmitter.emit('event');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Child Processes\",\r\n        \"topic_description\": \"Run child processes in Node.js to execute external commands or scripts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using 'child_process' Module\",\r\n                \"example_code\": \"const { exec } = require('child_process');\\nexec('ls -l', (error, stdout, stderr) => {\\n  if (error) {\\n    console.error(`Error: ${error.message}`);\\n    return;\\n  }\\n  if (stderr) {\\n    console.error(`Stderr: ${stderr}`);\\n    return;\\n  }\\n  console.log(`Result: ${stdout}`);\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Debugging Node.js\",\r\n        \"topic_description\": \"Learn debugging techniques for Node.js applications using built-in and third-party tools.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using 'console' Module\",\r\n                \"example_code\": \"console.log('Debugging message');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Debugging with 'inspect'\",\r\n                \"example_code\": \"node inspect myscript.js\\nchrome://inspect\\n// Debugging in Chrome DevTools\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Deployment and Hosting\",\r\n        \"topic_description\": \"Deploy Node.js applications to production servers and choose a hosting provider.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Deploying on Heroku\",\r\n                \"example_code\": \"// Install Heroku CLI\\nheroku login\\nheroku create\\nheroku git:remote -a your-app-name\\n// Deploy using Git\\ngit push heroku master\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Choosing a Hosting Provider\",\r\n                \"example_code\": \"AWS, Google Cloud, Azure, DigitalOcean, etc.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"File System (fs) Module\",\r\n        \"topic_description\": \"The 'fs' module in Node.js provides functions for interacting with the file system, allowing you to read, write, and manipulate files and directories.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Reading Files\",\r\n                \"example_code\": \"const fs = require('fs');\\n\\nfs.readFile('file.txt', 'utf8', (err, data) => {\\n  if (err) {\\n    console.error(err);\\n    return;\\n  }\\n  console.log(data);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Writing Files\",\r\n                \"example_code\": \"const fs = require('fs');\\n\\nfs.writeFile('file.txt', 'Hello, Node.js!', (err) => {\\n  if (err) {\\n    console.error(err);\\n    return;\\n  }\\n  console.log('File written successfully.');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Working with Directories\",\r\n                \"example_code\": \"const fs = require('fs');\\n\\nfs.mkdir('myfolder', (err) => {\\n  if (err) {\\n    console.error(err);\\n    return;\\n  }\\n  console.log('Directory created.');\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"File and Directory Operations\",\r\n                \"example_code\": \"const fs = require('fs');\\n\\nfs.rename('oldfile.txt', 'newfile.txt', (err) => {\\n  if (err) {\\n    console.error(err);\\n    return;\\n  }\\n  console.log('File renamed.');\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Event Loop\",\r\n        \"topic_description\": \"Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. The event loop is central to this architecture.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Understanding the Event Loop\",\r\n                \"example_code\": \"// Node.js event loop pseudocode\\nwhile (true) {\\n  if (events) {\\n    executeEventHandlers();\\n  }\\n  if (timers) {\\n    processTimers();\\n  }\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Event Loop Phases\",\r\n                \"example_code\": \"1. Timers\\n2. Pending Callbacks\\n3. Idle, Prepare\\n4. Poll\\n5. Check\\n6. Close Callbacks\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Callbacks and Promises\",\r\n                \"example_code\": \"Node.js supports callbacks and Promises to handle asynchronous operations efficiently.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Buffer\",\r\n        \"topic_description\": \"The 'Buffer' class in Node.js is used to work with binary data directly. It is particularly useful when dealing with streams or handling binary data from files or network protocols.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Buffers\",\r\n                \"example_code\": \"const buffer = Buffer.from('Hello, Node.js!');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Working with Buffers\",\r\n                \"example_code\": \"const buffer = Buffer.alloc(5);\\nbuffer.write('Node.js');\\nconsole.log(buffer.toString()); // 'Node.'\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Buffer Operations\",\r\n                \"example_code\": \"Buffers can be sliced, copied, and concatenated to manipulate binary data.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Streams\",\r\n        \"topic_description\": \"Streams are a powerful feature in Node.js for handling data flow. They can be readable, writable, or duplex, and are used in scenarios like reading large files or network communication.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Readable Streams\",\r\n                \"example_code\": \"const fs = require('fs');\\nconst readStream = fs.createReadStream('largefile.txt');\\nreadStream.pipe(response); // Send data to an HTTP response\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Writable Streams\",\r\n                \"example_code\": \"const fs = require('fs');\\nconst writeStream = fs.createWriteStream('output.txt');\\nrequest.pipe(writeStream); // Write data from an HTTP request\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Transform Streams\",\r\n                \"example_code\": \"Streams that modify or transform data as it passes through.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Piping Streams\",\r\n                \"example_code\": \"Stream data can be easily piped from a readable stream to a writable stream.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"NPM (Node Package Manager)\",\r\n        \"topic_description\": \"NPM is the default package manager for Node.js. It allows you to easily manage and share JavaScript libraries and packages with the Node.js community.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installing Packages\",\r\n                \"example_code\": \"npm install package-name\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating 'package.json'\",\r\n                \"example_code\": \"npm init\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Managing Dependencies\",\r\n                \"example_code\": \"npm install --save package-name\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Running Scripts\",\r\n                \"example_code\": \"npm run script-name\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Async/Await\",\r\n        \"topic_description\": \"Async/Await is a modern way to handle asynchronous operations in Node.js, making the code more readable and maintainable.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using 'async' Functions\",\r\n                \"example_code\": \"async function fetchData() {\\n  const data = await getDataFromAPI();\\n  console.log(data);\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Error Handling with 'try...catch'\",\r\n                \"example_code\": \"async function fetchData() {\\n  try {\\n    const data = await getDataFromAPI();\\n    console.log(data);\\n  } catch (error) {\\n    console.error(error);\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Node.js Modules\",\r\n        \"topic_description\": \"Node.js allows you to modularize your code by using built-in or custom modules. This promotes code reusability and maintainability.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Custom Modules\",\r\n                \"example_code\": \"module.exports = { myFunction };\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"const myModule = require('./my-module');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Core Modules\",\r\n                \"example_code\": \"Node.js includes many core modules for common tasks like 'http', 'fs', and 'path'.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"WebSockets\",\r\n        \"topic_description\": \"WebSockets enable real-time, bidirectional communication between clients and servers. They are often used in applications that require instant data updates or chat functionality.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a WebSocket Server\",\r\n                \"example_code\": \"const WebSocket = require('ws');\\nconst wss = new WebSocket.Server({ port: 8080 });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"WebSocket Client\",\r\n                \"example_code\": \"const WebSocket = require('ws');\\nconst ws = new WebSocket('ws://server-address');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling WebSocket Events\",\r\n                \"example_code\": \"ws.on('message', (message) => {\\n  console.log(`Received: ${message}`);\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Middleware\",\r\n        \"topic_description\": \"Middleware functions in Node.js are used in web frameworks like Express.js to perform tasks such as request processing, authentication, and error handling.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Middleware in Express.js\",\r\n                \"example_code\": \"app.use((req, res, next) => {\\n  // Middleware logic here\\n  next(); // Call the next middleware or route handler\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Custom Middleware\",\r\n                \"example_code\": \"const customMiddleware = (req, res, next) => {\\n  // Custom middleware logic\\n  next();\\n};\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Caching\",\r\n        \"topic_description\": \"Caching in Node.js can improve application performance by storing and reusing frequently accessed data instead of fetching it repeatedly.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"In-Memory Caching\",\r\n                \"example_code\": \"const cache = new Map();\\n\\nfunction getData(key) {\\n  if (cache.has(key)) {\\n    return cache.get(key);\\n  }\\n  const data = fetchDataFromDatabase(key);\\n  cache.set(key, data);\\n  return data;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using External Caches\",\r\n                \"example_code\": \"Node.js applications can also use external caching systems like Redis or Memcached.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication and Authorization\",\r\n        \"topic_description\": \"Implementing user authentication and authorization is essential for securing Node.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Passport.js\",\r\n                \"example_code\": \"Passport.js is a popular authentication middleware for Node.js applications.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"JWT (JSON Web Tokens)\",\r\n                \"example_code\": \"JWTs are commonly used for token-based authentication and authorization.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing in Node.js\",\r\n        \"topic_description\": \"Testing is crucial for ensuring the reliability and correctness of Node.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Mocha Testing Framework\",\r\n                \"example_code\": \"Mocha is a widely used testing framework for Node.js.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Chai Assertion Library\",\r\n                \"example_code\": \"Chai is often used in combination with Mocha for assertions.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Testing with 'assert'\",\r\n                \"example_code\": \"Node.js provides the built-in 'assert' module for basic assertions.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Promises and Async/Await\",\r\n        \"topic_description\": \"Promises and async/await are used to handle asynchronous operations in Node.js.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Promises\",\r\n                \"example_code\": \"const myPromise = new Promise((resolve, reject) => {\\n  // Promise logic\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Promises\",\r\n                \"example_code\": \"myPromise\\n  .then((result) => {\\n    // Handle success\\n  })\\n  .catch((error) => {\\n    // Handle error\\n  });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Environment Variables\",\r\n        \"topic_description\": \"Environment variables are used to configure Node.js applications and keep sensitive information secure.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Accessing Environment Variables\",\r\n                \"example_code\": \"const apiKey = process.env.API_KEY;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Setting Environment Variables\",\r\n                \"example_code\": \"API_KEY=myapikey node myscript.js\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Package.json Scripts\",\r\n        \"topic_description\": \"The 'scripts' section in 'package.json' allows you to define custom commands for various tasks.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Running Custom Scripts\",\r\n                \"example_code\": \"npm run my-script\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Pre and Post Hooks\",\r\n                \"example_code\": \"You can define pre and post hooks for scripts.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Timers\",\r\n        \"topic_description\": \"Node.js provides timer functions for scheduling code execution in the future.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"setTimeout\",\r\n                \"example_code\": \"setTimeout(() => {\\n  console.log('Delayed function executed.');\\n}, 2000);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"setInterval\",\r\n                \"example_code\": \"setInterval(() => {\\n  console.log('Repeated function executed.');\\n}, 1000);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Process Object\",\r\n        \"topic_description\": \"The 'process' object in Node.js provides information about the current Node.js process and allows interaction with it.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Command Line Arguments\",\r\n                \"example_code\": \"Access command line arguments using 'process.argv'.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Exit Codes\",\r\n                \"example_code\": \"Exit the process with a specific exit code using 'process.exit(code)'.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Web APIs with 'http' and 'https'\",\r\n        \"topic_description\": \"Node.js can be used to create HTTP and HTTPS servers for building web APIs.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating an HTTP Server\",\r\n                \"example_code\": \"const http = require('http');\\nconst server = http.createServer((req, res) => {\\n  // Request handling logic\\n});\\nserver.listen(8080);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Creating an HTTPS Server\",\r\n                \"example_code\": \"const https = require('https');\\nconst fs = require('fs');\\nconst options = {\\n  key: fs.readFileSync('key.pem'),\\n  cert: fs.readFileSync('cert.pem')\\n};\\nconst server = https.createServer(options, (req, res) => {\\n  // Request handling logic\\n});\\nserver.listen(8443);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Child Processes\",\r\n        \"topic_description\": \"Node.js can spawn child processes to execute system commands and interact with them.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Spawning Child Processes\",\r\n                \"example_code\": \"const { spawn } = require('child_process');\\nconst child = spawn('ls', ['-l']);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Interacting with Child Processes\",\r\n                \"example_code\": \"Child processes can communicate with the parent process using stdio.\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n// console.log(NodeJsCourseData[0]);\r\nexport default NodeJsCourseData;\r\n","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NextJs\\NextJsCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\NextJs\\NextJsCourseData.js",["231","232"],[],"const NextjsCourseData = [\r\n    {\r\n        \"topic_name\": \"Next.js Overview\",\r\n        \"topic_description\": \"Next.js is a popular React framework for building server-rendered React applications. It provides features like server-side rendering, routing, and automatic code splitting.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installation\",\r\n                \"example_code\": \"npx create-next-app my-nextjs-app\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Folder Structure\",\r\n                \"example_code\": \"pages/  // Route pages\\npublic/  // Static files\\nstyles/  // Global styles\\ncomponents/  // Reusable components\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Routing\",\r\n                \"example_code\": \"<Link href=\\\"/about\\\"><a>About</a></Link>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching Data\",\r\n                \"example_code\": \"export async function getServerSideProps(context) {\\n  // Fetch data from an API or database\\n  const data = await fetchData();\\n  return {\\n    props: { data },\\n  };\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Pages and Routing\",\r\n        \"topic_description\": \"Next.js uses the 'pages' directory for routing. Each file in 'pages' becomes a route, and dynamic routes can be created using square brackets.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Pages\",\r\n                \"example_code\": \"pages/index.js  // The default route\\npages/about.js  // The '/about' route\\npages/[slug].js  // Dynamic route\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Nested Routes\",\r\n                \"example_code\": \"pages/blog/index.js  // Nested route for '/blog'\\npages/blog/[id].js  // Dynamic route for '/blog/:id'\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Link Component\",\r\n                \"example_code\": \"<Link href=\\\"/about\\\"><a>About</a></Link>\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Programmatic Navigation\",\r\n                \"example_code\": \"import { useRouter } from 'next/router';\\nrouter.push('/about');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Data Fetching\",\r\n        \"topic_description\": \"Next.js supports various methods for fetching data, including getStaticProps, getServerSideProps, and getInitialProps, depending on your use case.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"getStaticProps\",\r\n                \"example_code\": \"export async function getStaticProps(context) {\\n  // Fetch data for static generation\\n  const data = await fetchData();\\n  return {\\n    props: { data },\\n  };\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"getServerSideProps\",\r\n                \"example_code\": \"export async function getServerSideProps(context) {\\n  // Fetch data on each request\\n  const data = await fetchData();\\n  return {\\n    props: { data },\\n  };\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"getInitialProps\",\r\n                \"example_code\": \"import fetch from 'isomorphic-unfetch';\\n\\nMyPage.getInitialProps = async ({ req }) => {\\n  const res = await fetch('https://api.example.com/data');\\n  const data = await res.json();\\n  return { data };\\n};\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Dynamic Imports\",\r\n        \"topic_description\": \"Next.js supports dynamic imports for code splitting, allowing you to load components or modules only when they are needed.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Importing Modules\",\r\n                \"example_code\": \"import dynamic from 'next/dynamic';\\nconst DynamicComponent = dynamic(() => import('../components/DynamicComponent'));\\n\\nfunction MyPage() {\\n  return <DynamicComponent />;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Loading Indicators\",\r\n                \"example_code\": \"import dynamic from 'next/dynamic';\\nconst Loading = () => <p>Loading...</p>;\\nconst DynamicComponentWithLoading = dynamic(() => import('../components/DynamicComponent'), { loading: Loading });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Layouts and Components\",\r\n        \"topic_description\": \"Next.js allows you to create reusable layout components that can be shared across multiple pages for consistent styling and structure.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Layouts\",\r\n                \"example_code\": \"components/Layout.js\\n\\nfunction Layout({ children }) {\\n  return (\\n    <div>\\n      <Header />\\n      {children}\\n      <Footer />\\n    </div>\\n  );\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Layouts\",\r\n                \"example_code\": \"pages/index.js\\n\\nimport Layout from '../components/Layout';\\n\\nfunction HomePage() {\\n  return (\\n    <Layout>\\n      <h1>Welcome to Next.js</h1>\\n    </Layout>\\n  );\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Shared Components\",\r\n                \"example_code\": \"components/Button.js\\n\\nfunction Button({ text }) {\\n  return <button>{text}</button>;\\n}\\n\\nexport default Button;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing Shared Components\",\r\n                \"example_code\": \"pages/index.js\\n\\nimport Button from '../components/Button';\\n\\nfunction HomePage() {\\n  return <Button text=\\\"Click Me\\\" />;\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"API Routes\",\r\n        \"topic_description\": \"Next.js allows you to create API routes as serverless functions, enabling you to build backend functionality within your Next.js app.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating API Routes\",\r\n                \"example_code\": \"pages/api/my-api.js\\n\\nexport default (req, res) => {\\n  const data = { message: 'Hello, API!' };\\n  res.status(200).json(data);\\n};\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fetching from API Routes\",\r\n                \"example_code\": \"components/MyComponent.js\\n\\nimport { useEffect, useState } from 'react';\\n\\nfunction MyComponent() {\\n  const [data, setData] = useState(null);\\n\\n  useEffect(() => {\\n    fetch('/api/my-api')\\n      .then((res) => res.json())\\n      .then((result) => setData(result));\\n  }, []);\\n\\n  return <div>{data ? data.message : 'Loading...'}</div>;\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication\",\r\n        \"topic_description\": \"Implementing authentication in Next.js can be done using various strategies, including JSON Web Tokens (JWT) and third-party libraries.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"JWT Authentication\",\r\n                \"example_code\": \"import jwt from 'jsonwebtoken';\\n\\n// Generate a JWT token\\nconst token = jwt.sign({ userId: '123' }, 'secret-key', { expiresIn: '1h' });\\n\\n// Verify a JWT token\\nconst decoded = jwt.verify(token, 'secret-key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Third-Party Libraries\",\r\n                \"example_code\": \"import { useAuth0 } from '@auth0/auth0-react';\\n\\nfunction Profile() {\\n  const { user, isAuthenticated } = useAuth0();\\n  return isAuthenticated ? <div>Welcome, {user.name}!</div> : null;\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Styling\",\r\n        \"topic_description\": \"Styling in Next.js can be achieved using various methods, including CSS, CSS Modules, and styled-components.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"CSS Stylesheets\",\r\n                \"example_code\": \"import './MyComponent.css';\\n\\nfunction MyComponent() {\\n  return <div className=\\\"my-component\\\">Styled with CSS</div>;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"CSS Modules\",\r\n                \"example_code\": \"import styles from './MyComponent.module.css';\\n\\nfunction MyComponent() {\\n  return <div className={styles.myComponent}>Styled with CSS Modules</div>;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"styled-components\",\r\n                \"example_code\": \"import styled from 'styled-components';\\n\\nconst Wrapper = styled.div\\`\\n  background-color: lightgray;\\n\\`;\\n\\nfunction MyComponent() {\\n  return <Wrapper>Styled with styled-components</Wrapper>;\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling\",\r\n        \"topic_description\": \"Next.js provides error handling capabilities for both client-side and server-side errors to maintain a robust application.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Client-Side Errors\",\r\n                \"example_code\": \"import { useRouter } from 'next/router';\\n\\nfunction MyPage() {\\n  const router = useRouter();\\n\\n  const handleButtonClick = () => {\\n    try {\\n      // Code that may throw an error\\n    } catch (error) {\\n      router.push('/error');\\n    }\\n  };\\n\\n  return <button onClick={handleButtonClick}>Click Me</button>;\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Server-Side Errors\",\r\n                \"example_code\": \"export default function handler(req, res) {\\n  try {\\n    // Code that may throw an error\\n  } catch (error) {\\n    console.error(error);\\n    res.status(500).send('Something went wrong!');\\n  }\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing\",\r\n        \"topic_description\": \"Testing is crucial for maintaining a healthy Next.js application. Libraries like Jest and Testing Library can be used for writing tests.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Jest and Testing Library Setup\",\r\n                \"example_code\": \"npm install --save-dev jest @testing-library/react @testing-library/jest-dom\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Component Testing\",\r\n                \"example_code\": \"import { render, screen } from '@testing-library/react';\\nimport MyComponent from './MyComponent';\\n\\ntest('renders the component', () => {\\n  render(<MyComponent />);\\n  const element = screen.getByText('Hello, Next.js!');\\n  expect(element).toBeInTheDocument();\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Pages\",\r\n        \"topic_description\": \"Custom error pages can be created in Next.js to handle different types of errors gracefully.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"404 Page\",\r\n                \"example_code\": \"pages/404.js\\n\\nfunction Custom404() {\\n  return <h1>404 - Page Not Found</h1>;\\n}\\n\\nexport default Custom404;\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Other Error Pages\",\r\n                \"example_code\": \"pages/500.js\\n\\nfunction Custom500() {\\n  return <h1>500 - Server Error</h1>;\\n}\\n\\nexport default Custom500;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Environment Variables\",\r\n        \"topic_description\": \"Sensitive data and configuration can be stored in environment variables for security and flexibility.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Accessing Environment Variables\",\r\n                \"example_code\": \"const apiKey = process.env.API_KEY;\\nconsole.log(apiKey);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using .env Files\",\r\n                \"example_code\": \"Create a .env file and add variables:\\nAPI_KEY=your-api-key\\n\\nThen, use a package like 'dotenv' to load them.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Internationalization (i18n)\",\r\n        \"topic_description\": \"Next.js supports internationalization to create multilingual applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using 'next-i18next'\",\r\n                \"example_code\": \"npm install next-i18next i18next\\n\\nConfigure i18n and translation files.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Switching Languages\",\r\n                \"example_code\": \"import { useTranslation } from 'next-i18next';\\n\\nfunction MyComponent() {\\n  const { t } = useTranslation('common');\\n  return <p>{t('hello')}</p>;\\n}\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Middleware\",\r\n        \"topic_description\": \"Middleware functions can be used to customize the behavior of Next.js routes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Middleware\",\r\n                \"example_code\": \"function middleware(req, res, next) {\\n  // Perform actions before reaching the route\\n  next();\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Middleware\",\r\n                \"example_code\": \"import { applyMiddleware } from 'next-middleware';\\n\\nexport default applyMiddleware(middleware, handler);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Webpack Configuration\",\r\n        \"topic_description\": \"Customizing Webpack configuration in Next.js for advanced use cases.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Custom Webpack Config\",\r\n                \"example_code\": \"const withCustomWebpack = require('next-compose-plugins')\\nconst withBundleAnalyzer = require('@next/bundle-analyzer')\\n\\nmodule.exports = withCustomWebpack(withBundleAnalyzer({\\n  webpack: (config, options) => {\\n    // Customize Webpack configuration\\n    return config;\\n  },\\n}));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Plugins\",\r\n                \"example_code\": \"Install and use plugins to modify the Webpack configuration.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Serverless Deployment\",\r\n        \"topic_description\": \"Next.js applications can be deployed to serverless platforms for scalability and cost-effectiveness.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Vercel Deployment\",\r\n                \"example_code\": \"Vercel offers seamless deployment for Next.js apps with automatic serverless setup.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"AWS Lambda\",\r\n                \"example_code\": \"Host Next.js apps on AWS Lambda using services like AWS API Gateway.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication Strategies\",\r\n        \"topic_description\": \"Implementing authentication using various strategies like OAuth and JWT.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"OAuth with NextAuth.js\",\r\n                \"example_code\": \"NextAuth.js simplifies OAuth and authentication setup in Next.js apps.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"JWT Authentication\",\r\n                \"example_code\": \"Implement JWT-based authentication for secure user sessions.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Webhooks\",\r\n        \"topic_description\": \"Webhooks allow your application to react to events on external services.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating Webhooks\",\r\n                \"example_code\": \"Set up webhooks to listen for events and trigger actions.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Webhooks\",\r\n                \"example_code\": \"Implement webhook handlers to process incoming data.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Optimizing Performance\",\r\n        \"topic_description\": \"Improving the performance of your Next.js application.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Image Optimization\",\r\n                \"example_code\": \"Use the 'next/image' component for optimized image loading.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Code Splitting\",\r\n                \"example_code\": \"Split your code into smaller chunks for faster initial load times.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Real-time Updates\",\r\n        \"topic_description\": \"Implementing real-time features using technologies like WebSockets or server-sent events (SSE).\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"WebSockets\",\r\n                \"example_code\": \"Integrate WebSockets for bidirectional real-time communication.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Server-Sent Events\",\r\n                \"example_code\": \"Use SSE to send updates from the server to the client.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Content Management Systems (CMS)\",\r\n        \"topic_description\": \"Integrating CMS platforms like WordPress or headless CMS systems.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"WordPress Integration\",\r\n                \"example_code\": \"Use the 'wpapi' package to fetch data from a WordPress site.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Headless CMS\",\r\n                \"example_code\": \"Connect Next.js to a headless CMS like Contentful or Strapi.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Authentication and Authorization\",\r\n        \"topic_description\": \"Implementing user authentication and authorization in Next.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Passport.js Integration\",\r\n                \"example_code\": \"Integrate Passport.js for various authentication strategies.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Role-Based Access Control\",\r\n                \"example_code\": \"Implement role-based access control (RBAC) for authorization.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Database Integration\",\r\n        \"topic_description\": \"Connecting Next.js applications to databases for data storage and retrieval.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"MongoDB\",\r\n                \"example_code\": \"Use the 'mongoose' library to interact with MongoDB.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"MySQL\",\r\n                \"example_code\": \"Connect Next.js to MySQL databases using 'mysql2'.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Server-Side Rendering (SSR)\",\r\n        \"topic_description\": \"Utilizing server-side rendering for improved SEO and performance.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"SSR with Data Fetching\",\r\n                \"example_code\": \"Fetch data on the server side and pass it to components.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Static Site Generation (SSG)\",\r\n                \"example_code\": \"Generate static pages at build time for optimal performance.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Testing and Quality Assurance\",\r\n        \"topic_description\": \"Ensuring the quality and reliability of Next.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Unit Testing\",\r\n                \"example_code\": \"Write unit tests using libraries like 'Jest' and 'React Testing Library'.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"End-to-End (E2E) Testing\",\r\n                \"example_code\": \"Implement E2E tests with tools like 'Cypress' or 'Puppeteer'.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"SEO Optimization\",\r\n        \"topic_description\": \"Optimizing Next.js applications for search engine visibility.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Meta Tags and SEO Components\",\r\n                \"example_code\": \"Create SEO components to set meta tags and titles.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Sitemap Generation\",\r\n                \"example_code\": \"Generate sitemaps for improved search engine indexing.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Web Accessibility (a11y)\",\r\n        \"topic_description\": \"Ensuring web accessibility standards are met for all users.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Screen Reader Support\",\r\n                \"example_code\": \"Test and enhance screen reader compatibility.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Keyboard Navigation\",\r\n                \"example_code\": \"Ensure keyboard navigation is functional and intuitive.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Error Handling and Logging\",\r\n        \"topic_description\": \"Implementing error handling strategies and logging for debugging.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Error Boundary\",\r\n                \"example_code\": \"Wrap components with error boundaries for graceful error handling.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Logging Libraries\",\r\n                \"example_code\": \"Use logging libraries like 'Winston' or 'Bunyan' for detailed logs.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Progressive Web Apps (PWAs)\",\r\n        \"topic_description\": \"Turning Next.js apps into Progressive Web Apps for offline support and performance improvements.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Service Workers\",\r\n                \"example_code\": \"Implement service workers for caching and offline capabilities.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Installable PWA\",\r\n                \"example_code\": \"Make your app installable on users' devices.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Deployment Strategies\",\r\n        \"topic_description\": \"Choosing the right deployment strategy for Next.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Serverless Deployment\",\r\n                \"example_code\": \"Deploy to serverless platforms like Vercel or Netlify.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Docker Containers\",\r\n                \"example_code\": \"Containerize your Next.js app for deployment in Docker containers.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Caching and CDN Integration\",\r\n        \"topic_description\": \"Implementing caching strategies and utilizing CDNs for content delivery.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Client-Side Caching\",\r\n                \"example_code\": \"Leverage client-side caching with libraries like 'swr'.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"CDN Integration\",\r\n                \"example_code\": \"Integrate a Content Delivery Network for optimized content delivery.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Loading and Manipulating 3D Text\",\r\n        \"topic_description\": \"Learn how to load and manipulate 3D text objects in Three.js for adding text content to your 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Loading 3D Text Models\",\r\n                \"example_code\": `\r\n    // Load 3D text models or fonts for creating 3D text\r\n    // Use TextGeometry or TextBufferGeometry to generate 3D text geometry\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Customizing Text Appearance\",\r\n                \"example_code\": `\r\n    // Customize the appearance of 3D text using materials and textures\r\n    // Adjust text color, font size, and extrusion depth\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Animating 3D Text\",\r\n                \"example_code\": `\r\n    // Animate 3D text objects using keyframes or scripts\r\n    // Create dynamic and engaging text animations\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Camera Controls\",\r\n        \"topic_description\": \"Implement camera controls for user navigation within 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Orbit Controls\",\r\n                \"example_code\": `\r\n    // Implement orbit controls to allow users to orbit around a target\r\n    // Enable panning, zooming, and rotation interactions\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"First-Person Controls\",\r\n                \"example_code\": `\r\n    // Create first-person camera controls for immersive experiences\r\n    // Capture mouse and keyboard input for movement and look controls\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fly Controls\",\r\n                \"example_code\": `\r\n    // Implement fly controls for a flying camera experience\r\n    // Enable navigation through 3D space with smooth movements\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"VR and AR Interaction\",\r\n        \"topic_description\": \"Explore interaction techniques in virtual reality (VR) and augmented reality (AR) using Three.js.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"VR Hand Tracking\",\r\n                \"example_code\": `\r\n    // Implement VR hand tracking using controllers or hand-tracking devices\r\n    // Enable hand gestures and interactions in VR environments\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"AR Marker-Based Tracking\",\r\n                \"example_code\": `\r\n    // Use AR markers for object tracking and interaction in AR scenes\r\n    // Recognize and respond to marker patterns in real-world environments\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"VR and AR UI Elements\",\r\n                \"example_code\": `\r\n    // Create user interface (UI) elements and menus in VR and AR\r\n    // Design interactive menus and UI elements in 3D space\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Advanced Physics Simulations\",\r\n        \"topic_description\": \"Take physics simulations to the next level with advanced features and interactions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Rigid Body Dynamics\",\r\n                \"example_code\": `\r\n    // Simulate rigid body dynamics for realistic object interactions\r\n    // Create objects with mass, collision shapes, and constraints\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Cloth and Soft Bodies\",\r\n                \"example_code\": `\r\n    // Simulate cloth and soft bodies with dynamic behavior\r\n    // Achieve realistic cloth movements and deformations\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Fluid Simulation\",\r\n                \"example_code\": `\r\n    // Implement fluid simulations for liquids and gases\r\n    // Simulate fluid behavior with particle-based or grid-based methods\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Real-Time Reflections\",\r\n        \"topic_description\": \"Add real-time reflections to objects and scenes for increased realism.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Screen Space Reflections (SSR)\",\r\n                \"example_code\": `\r\n    // Implement screen space reflections (SSR) for real-time reflections\r\n    // Render reflections based on screen-space information\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Cube Mapping\",\r\n                \"example_code\": `\r\n    // Use cube mapping to generate reflections for objects\r\n    // Apply cube maps to materials for reflective surfaces\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Dynamic Reflection Probes\",\r\n                \"example_code\": `\r\n    // Create dynamic reflection probes for accurate and dynamic reflections\r\n    // Improve reflection quality in changing environments\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Multiplayer 3D Experiences\",\r\n        \"topic_description\": \"Build multiplayer 3D experiences and online games using Three.js and networking libraries.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Network Integration\",\r\n                \"example_code\": `\r\n    // Integrate networking libraries (e.g., Socket.io) for multiplayer support\r\n    // Synchronize object states and player actions across clients\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Real-Time Collaboration\",\r\n                \"example_code\": `\r\n    // Create collaborative 3D environments for real-time teamwork\r\n    // Implement shared object interactions and communication\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Leaderboards and Scoring\",\r\n                \"example_code\": `\r\n    // Implement leaderboards and scoring systems for online games\r\n    // Track and display player scores and achievements\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Terrain Generation\",\r\n        \"topic_description\": \"Generate and render realistic terrains for outdoor and landscape scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Heightmaps\",\r\n                \"example_code\": `\r\n    // Use heightmaps to define terrain elevation data\r\n    // Generate terrains with varying heights and features\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Terrain Texturing\",\r\n                \"example_code\": `\r\n    // Apply textures to terrain for ground cover and details\r\n    // Blend textures based on terrain height and slope\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Procedural Terrain Generation\",\r\n                \"example_code\": `\r\n    // Generate terrains procedurally using algorithms (e.g., Perlin noise)\r\n    // Create vast and diverse terrains without manual modeling\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Interactive 3D Widgets\",\r\n        \"topic_description\": \"Design and implement interactive 3D widgets for user interface elements in 3D scenes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"3D Buttons and Controls\",\r\n                \"example_code\": `\r\n    // Create 3D buttons, sliders, and controls for user interactions\r\n    // Design interactive elements for 3D applications\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"HUD (Heads-Up Display)\",\r\n                \"example_code\": `\r\n    // Implement HUD elements for displaying information in 3D scenes\r\n    // Overlay UI elements in the user's field of view\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"3D Object Manipulation Handles\",\r\n                \"example_code\": `\r\n    // Design manipulation handles for rotating, scaling, and moving objects\r\n    // Allow users to interact with objects through handles\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Realistic Sky and Atmosphere\",\r\n        \"topic_description\": \"Enhance the visual quality of your 3D scenes with realistic sky and atmospheric effects.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Day-Night Cycle\",\r\n                \"example_code\": `\r\n    // Create a dynamic day-night cycle with changing lighting and sky appearance\r\n    // Simulate the passage of time in your 3D scenes\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Atmospheric Scattering\",\r\n                \"example_code\": `\r\n    // Implement atmospheric scattering for realistic sky appearance\r\n    // Achieve realistic colors and lighting in the sky\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Weather Effects\",\r\n                \"example_code\": `\r\n    // Add weather effects such as clouds, rain, and fog to your scenes\r\n    // Create immersive and dynamic outdoor environments\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Optimizing 3D Models\",\r\n        \"topic_description\": \"Optimize 3D models and assets for improved performance and rendering.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"LOD (Level of Detail)\",\r\n                \"example_code\": `\r\n    // Implement level of detail (LOD) techniques for varying model complexity\r\n    // Load lower-poly models at a distance to improve performance\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Texture Compression\",\r\n                \"example_code\": `\r\n    // Compress textures to reduce memory usage and load times\r\n    // Use texture formats like DDS, WebP, or Basis Universal\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Geometry Instancing\",\r\n                \"example_code\": `\r\n    // Use geometry instancing to render multiple instances of the same model efficiently\r\n    // Optimize rendering for objects with repetitive geometry\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"3D Audio and Spatial Sound\",\r\n        \"topic_description\": \"Enhance 3D experiences with spatial audio and realistic soundscapes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Positional Audio\",\r\n                \"example_code\": `\r\n    // Implement positional audio for 3D sound sources\r\n    // Simulate sound direction and attenuation based on object position\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Ambisonic Audio\",\r\n                \"example_code\": `\r\n    // Use ambisonic audio for immersive 360-degree soundscapes\r\n    // Create rich and dynamic audio environments\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Interactive Sound Triggers\",\r\n                \"example_code\": `\r\n    // Trigger sound effects and music based on user interactions or events\r\n    // Add audio feedback and ambiance to your 3D scenes\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Mobile and WebXR\",\r\n        \"topic_description\": \"Optimize Three.js applications for mobile devices and WebXR experiences.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Mobile Touch Controls\",\r\n                \"example_code\": `\r\n    // Implement touch controls for mobile devices\r\n    // Enable touch-based interactions and gestures\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"WebXR Support\",\r\n                \"example_code\": `\r\n    // Add WebXR support for immersive VR and AR experiences in browsers\r\n    // Create cross-platform XR applications using WebXR APIs\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Performance Tuning for Mobile\",\r\n                \"example_code\": `\r\n    // Optimize performance for mobile devices with limited resources\r\n    // Adjust quality settings and reduce computational load\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Debugging and Profiling\",\r\n        \"topic_description\": \"Master debugging and profiling techniques for identifying and resolving issues in Three.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Browser Developer Tools\",\r\n                \"example_code\": `\r\n    // Utilize browser developer tools for debugging Three.js code\r\n    // Inspect and modify scene elements, shaders, and textures\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Performance Profiling\",\r\n                \"example_code\": `\r\n    // Profile performance to identify bottlenecks and optimize rendering\r\n    // Use tools like Chrome DevTools to analyze frame rates and GPU usage\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Error Handling\",\r\n                \"example_code\": `\r\n    // Implement error handling strategies to gracefully handle runtime errors\r\n    // Provide informative error messages and fallbacks\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"3D Model Importers\",\r\n        \"topic_description\": \"Learn to import 3D models from various file formats and sources.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"GLTF and FBX Formats\",\r\n                \"example_code\": `\r\n    // Import 3D models in GLTF and FBX formats\r\n    // Use widely supported formats for compatibility\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"External Model Libraries\",\r\n                \"example_code\": `\r\n    // Explore external 3D model libraries and repositories\r\n    // Access a wide range of pre-made 3D models for your projects\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Custom Model Loading\",\r\n                \"example_code\": `\r\n    // Implement custom model loading procedures for specialized models\r\n    // Load and integrate models from unique sources or formats\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Advanced Shader Effects\",\r\n        \"topic_description\": \"Create complex shader effects for materials and visual enhancements.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Ray Tracing\",\r\n                \"example_code\": `\r\n    // Implement ray tracing effects for realistic reflections and lighting\r\n    // Achieve photorealistic rendering in real-time applications\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"GPU Compute Shaders\",\r\n                \"example_code\": `\r\n    // Utilize GPU compute shaders for parallel computing tasks\r\n    // Perform complex simulations and computations on the GPU\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Toon Shading\",\r\n                \"example_code\": `\r\n    // Apply toon shading techniques for a stylized and cartoon-like appearance\r\n    // Create unique visual styles with contour lines and flat shading\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Creating 3D Particle Systems\",\r\n        \"topic_description\": \"Generate and animate 3D particle systems for various visual effects.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Particle Emitters\",\r\n                \"example_code\": `\r\n    // Create particle emitters for generating particle streams\r\n    // Adjust parameters like particle size, velocity, and lifespan\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Particle Textures\",\r\n                \"example_code\": `\r\n    // Apply textures to particles for diverse visual effects\r\n    // Use textures for sparks, smoke, fire, and more\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Interactive Particle Systems\",\r\n                \"example_code\": `\r\n    // Implement interactive particle systems affected by user interactions\r\n    // Create particle-based effects that respond to user actions\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Interactive 3D Charts and Data Visualization\",\r\n        \"topic_description\": \"Visualize data in 3D space and create interactive charts and graphs.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"3D Scatter Plots\",\r\n                \"example_code\": `\r\n    // Create 3D scatter plots to visualize data points in a 3D environment\r\n    // Use colors and markers to represent data attributes\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Animated Data Visualization\",\r\n                \"example_code\": `\r\n    // Animate data visualization elements for dynamic and engaging charts\r\n    // Add time-based animations to data-driven scenes\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Interactivity and Data Filtering\",\r\n                \"example_code\": `\r\n    // Implement interactivity for exploring data and filtering datasets\r\n    // Allow users to interact with data points and explore insights\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"AI and Machine Learning Integration\",\r\n        \"topic_description\": \"Integrate AI and machine learning models into Three.js applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Object Recognition\",\r\n                \"example_code\": `\r\n    // Implement object recognition using machine learning models\r\n    // Identify and interact with objects in the 3D scene\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Gesture Recognition\",\r\n                \"example_code\": `\r\n    // Recognize user gestures and actions using AI algorithms\r\n    // Enable gesture-based interactions in 3D environments\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Natural Language Processing (NLP)\",\r\n                \"example_code\": `\r\n    // Integrate natural language processing for voice interactions\r\n    // Allow users to control the 3D scene using voice commands\r\n    `\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Custom 3D Physics Simulations\",\r\n        \"topic_description\": \"Create custom physics simulations and behaviors tailored to your application.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Custom Colliders\",\r\n                \"example_code\": `\r\n    // Define custom collision shapes and colliders for objects\r\n    // Implement unique collision behaviors for specialized interactions\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Physics Constraints\",\r\n                \"example_code\": `\r\n    // Create physics constraints and joints between objects\r\n    // Simulate complex mechanical systems and interactions\r\n    `\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Advanced Gravitational Forces\",\r\n                \"example_code\": `\r\n    // Implement custom gravitational forces and fields\r\n    // Simulate gravitational effects unique to your 3D world\r\n    `\r\n            }\r\n        ]\r\n    }\r\n\r\n];\r\n\r\n// console.log(JSON.stringify(NextjsCourseData, null, 2));\r\nexport default NextjsCourseData;","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\ThreeJs\\ThreeJsData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\ThreeJs\\ThreeJsCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Web3js\\Web3jsCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Web3js\\Web3jsCourseData.js",["233"],[],"var Web3jsCourseData = [\r\n    {\r\n        \"topic_name\": \"Introduction to web3.js\",\r\n        \"topic_description\": \"Web3.js is a JavaScript library for interacting with the Ethereum blockchain. It allows developers to build decentralized applications (DApps) and interact with smart contracts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Installing web3.js\",\r\n                \"example_code\": \"// Install web3.js using npm\\nnpm install web3\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing web3.js\",\r\n                \"example_code\": \"const Web3 = require('web3');\\nconst web3 = new Web3('https://mainnet.infura.io/v3/your-infura-api-key');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Connecting to Ethereum\",\r\n        \"topic_description\": \"To interact with the Ethereum blockchain, you need to connect to an Ethereum node. Infura is a popular choice for connecting to Ethereum without running a local node.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Connecting to Infura\",\r\n                \"example_code\": \"const web3 = new Web3('https://mainnet.infura.io/v3/your-infura-api-key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Checking Connection\",\r\n                \"example_code\": \"web3.eth.net.isListening()\\n  .then(console.log)\\n  .catch(console.error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Account Management\",\r\n        \"topic_description\": \"Web3.js provides functions for managing Ethereum accounts, including creating, unlocking, and listing accounts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating an Account\",\r\n                \"example_code\": \"const newAccount = web3.eth.accounts.create();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Unlocking an Account\",\r\n                \"example_code\": \"web3.eth.personal.unlockAccount(address, password, durationInSeconds);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Listing Accounts\",\r\n                \"example_code\": \"web3.eth.getAccounts()\\n  .then(console.log)\\n  .catch(console.error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Sending Ether\",\r\n        \"topic_description\": \"You can use web3.js to send Ether (ETH) from one account to another. This is commonly used for transactions and payments.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Sending Ether\",\r\n                \"example_code\": \"web3.eth.sendTransaction({\\n  from: senderAddress,\\n  to: recipientAddress,\\n  value: web3.utils.toWei('1', 'ether')\\n})\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Checking Ether Balance\",\r\n                \"example_code\": \"web3.eth.getBalance(address)\\n  .then(balance => {\\n    const etherBalance = web3.utils.fromWei(balance, 'ether');\\n    console.log(`Balance: ${etherBalance} ETH`);\\n  })\\n  .catch(console.error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Smart Contracts\",\r\n        \"topic_description\": \"Web3.js allows you to deploy and interact with smart contracts on the Ethereum blockchain.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Deploying a Smart Contract\",\r\n                \"example_code\": \"// Create a contract object with ABI and bytecode\\nconst contract = new web3.eth.Contract(abi);\\n\\n// Deploy the contract\\ncontract.deploy({\\n  data: '0x' + bytecode,\\n  arguments: [arg1, arg2]\\n})\\n.send({\\n  from: accountAddress,\\n  gas: 2000000\\n})\\n.then(newContract => {\\n  console.log('Contract deployed at:', newContract.options.address);\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Interacting with a Smart Contract\",\r\n                \"example_code\": \"// Create a contract instance with ABI and contract address\\nconst contract = new web3.eth.Contract(abi, contractAddress);\\n\\n// Call a contract function\\ncontract.methods.someFunction(arg1, arg2)\\n.call({ from: accountAddress })\\n.then(result => console.log('Function result:', result));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Transaction Handling\",\r\n        \"topic_description\": \"Web3.js allows you to send transactions, check transaction status, and get transaction receipts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Sending a Transaction\",\r\n                \"example_code\": \"web3.eth.sendTransaction({\\n  from: senderAddress,\\n  to: recipientAddress,\\n  value: web3.utils.toWei('1', 'ether')\\n})\\n.on('transactionHash', hash => console.log('Transaction Hash:', hash))\\n.on('receipt', receipt => console.log('Transaction Receipt:', receipt));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Checking Transaction Status\",\r\n                \"example_code\": \"web3.eth.getTransactionReceipt(transactionHash)\\n  .then(receipt => {\\n    if (receipt && receipt.status) {\\n      console.log('Transaction succeeded');\\n    } else if (receipt) {\\n      console.log('Transaction failed');\\n    } else {\\n      console.log('Transaction not mined');\\n    }\\n  })\\n  .catch(console.error);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Events\",\r\n        \"topic_description\": \"Ethereum smart contracts emit events, and web3.js allows you to listen for and handle these events.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Listening for Events\",\r\n                \"example_code\": \"// Create a contract instance with ABI and contract address\\nconst contract = new web3.eth.Contract(abi, contractAddress);\\n\\n// Listen for an event\\ncontract.events.MyEvent({\\n  fromBlock: 0,\\n  toBlock: 'latest'\\n}, (error, event) => {\\n  if (error) {\\n    console.error('Event error:', error);\\n  } else {\\n    console.log('Event data:', event.returnValues);\\n  }\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Gas and Gas Price\",\r\n        \"topic_description\": \"When sending transactions on Ethereum, you need to specify gas and gas prices. Web3.js provides functions to estimate gas and get gas prices.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Estimating Gas\",\r\n                \"example_code\": \"web3.eth.estimateGas({\\n  from: senderAddress,\\n  to: recipientAddress,\\n  value: web3.utils.toWei('1', 'ether')\\n})\\n.then(gasEstimate => console.log('Gas Estimate:', gasEstimate));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Getting Gas Price\",\r\n                \"example_code\": \"web3.eth.getGasPrice()\\n  .then(gasPrice => console.log('Gas Price:', gasPrice));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Web3 Providers\",\r\n        \"topic_description\": \"Web3.js supports various providers for connecting to Ethereum. Infura, MetaMask, and local nodes are common choices.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using Infura Provider\",\r\n                \"example_code\": \"const web3 = new Web3('https://mainnet.infura.io/v3/your-infura-api-key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using MetaMask Provider\",\r\n                \"example_code\": \"if (window.ethereum) {\\n  const web3 = new Web3(window.ethereum);\\n  try {\\n    // Request account access if needed\\n    await window.ethereum.enable();\\n  } catch (error) {\\n    // User denied account access\\n  }\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Local Node Provider\",\r\n                \"example_code\": \"const web3 = new Web3('http://localhost:8545');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Tokens\",\r\n        \"topic_description\": \"Ethereum-based tokens (ERC-20, ERC-721, etc.) can be managed using web3.js to transfer, check balances, and interact with token contracts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Transferring Tokens\",\r\n                \"example_code\": \"// Create a token contract instance\\nconst tokenContract = new web3.eth.Contract(abi, tokenAddress);\\n\\n// Transfer tokens\\ntokenContract.methods.transfer(toAddress, amount).send({ from: accountAddress });\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Checking Token Balance\",\r\n                \"example_code\": \"// Create a token contract instance\\nconst tokenContract = new web3.eth.Contract(abi, tokenAddress);\\n\\n// Check token balance\\ntokenContract.methods.balanceOf(accountAddress).call().then(balance => console.log('Token Balance:', balance));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with IPFS\",\r\n        \"topic_description\": \"InterPlanetary File System (IPFS) can be integrated with web3.js to store and retrieve data on a decentralized network.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Uploading Data to IPFS\",\r\n                \"example_code\": \"const ipfs = ipfsClient('localhost', '5001');\\n\\nipfs.add(Buffer.from('Hello, IPFS!'), (err, result) => {\\n  if (err) {\\n    console.error('IPFS upload error:', err);\\n  } else {\\n    console.log('IPFS Hash:', result[0].hash);\\n  }\\n});\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Retrieving Data from IPFS\",\r\n                \"example_code\": \"const ipfs = ipfsClient('localhost', '5001');\\n\\nipfs.cat(ipfsHash, (err, data) => {\\n  if (err) {\\n    console.error('IPFS retrieval error:', err);\\n  } else {\\n    console.log('IPFS Data:', data.toString());\\n  }\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Security Best Practices\",\r\n        \"topic_description\": \"When working with web3.js and Ethereum, it's important to follow security best practices to protect your assets and applications.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Protecting Private Keys\",\r\n                \"example_code\": \"Never expose or share your private keys with anyone. Use hardware wallets or secure key management solutions.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Avoiding Scams\",\r\n                \"example_code\": \"Be cautious of phishing websites, scams, and fraudulent smart contracts. Verify contract addresses and use trusted sources.\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Testing on Testnets\",\r\n                \"example_code\": \"Before deploying to the mainnet, test your smart contracts and applications on Ethereum testnets to ensure functionality and security.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Nonces\",\r\n        \"topic_description\": \"A nonce is a number used to prevent transaction replay attacks. Web3.js provides methods for managing nonces when sending transactions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Getting Account Nonce\",\r\n                \"example_code\": \"web3.eth.getTransactionCount(accountAddress, 'latest')\\n  .then(nonce => console.log('Account Nonce:', nonce));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Using Nonce in Transactions\",\r\n                \"example_code\": \"const nonce = web3.utils.toHex(nonceValue);\\n\\nconst txObject = {\\n  nonce: nonce,\\n  from: senderAddress,\\n  to: recipientAddress,\\n  value: web3.utils.toWei('1', 'ether')\\n};\\n\\nweb3.eth.sendTransaction(txObject);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Promises\",\r\n        \"topic_description\": \"Web3.js extensively uses Promises for asynchronous operations. Understanding Promises is essential for handling Ethereum interactions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Using async/await\",\r\n                \"example_code\": \"async function example() {\\n  const balance = await web3.eth.getBalance(accountAddress);\\n  console.log('Account Balance:', balance);\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Handling Promise Errors\",\r\n                \"example_code\": \"web3.eth.getBalance(accountAddress)\\n  .then(balance => console.log('Account Balance:', balance))\\n  .catch(error => console.error('Error:', error));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with BigNumber\",\r\n        \"topic_description\": \"BigNumber.js is used to handle large numbers like Ethereum wei values. Web3.js provides utils for converting between BigNumber and wei.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Converting to Wei\",\r\n                \"example_code\": \"const weiValue = web3.utils.toWei('1', 'ether');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Converting from Wei\",\r\n                \"example_code\": \"const etherValue = web3.utils.fromWei(weiValue, 'ether');\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Ethereum Name Service (ENS)\",\r\n        \"topic_description\": \"ENS allows human-readable names for Ethereum addresses. Web3.js provides methods for interacting with ENS.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Resolving ENS Names\",\r\n                \"example_code\": \"web3.eth.ens.getAddress('example.eth')\\n  .then(address => console.log('Resolved Address:', address));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Registering ENS Names\",\r\n                \"example_code\": \"const ensContract = new web3.eth.Contract(ensAbi, ensAddress);\\n\\nensContract.methods.register('yourname.eth', accountAddress).send({ from: accountAddress });\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Gas Limits\",\r\n        \"topic_description\": \"Ethereum transactions require specifying gas limits. Web3.js provides methods for estimating and setting gas limits.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Estimating Gas Limits\",\r\n                \"example_code\": \"web3.eth.estimateGas({\\n  from: senderAddress,\\n  to: recipientAddress,\\n  data: contractData\\n})\\n.then(gasLimit => console.log('Estimated Gas Limit:', gasLimit));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Setting Custom Gas Limits\",\r\n                \"example_code\": \"const txObject = {\\n  gas: web3.utils.toHex(customGasLimit)\\n};\\n\\nweb3.eth.sendTransaction(txObject);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Web3.js Providers\",\r\n        \"topic_description\": \"Web3.js supports various providers, including HTTP, WebSocket, and custom providers for connecting to Ethereum nodes.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"HTTP Provider\",\r\n                \"example_code\": \"const web3 = new Web3('https://mainnet.infura.io/v3/your-infura-api-key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"WebSocket Provider\",\r\n                \"example_code\": \"const web3 = new Web3('wss://mainnet.infura.io/ws/v3/your-infura-api-key');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Custom Provider\",\r\n                \"example_code\": \"const customProvider = new Web3.providers.HttpProvider('http://localhost:8545');\\nconst web3 = new Web3(customProvider);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Handling Contract Events\",\r\n        \"topic_description\": \"Ethereum smart contracts emit events, and web3.js allows you to subscribe to and handle these events in real-time.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Subscribing to Events\",\r\n                \"example_code\": \"const event = contract.events.MyEvent();\\n\\nevent.on('data', (eventData) => {\\n  console.log('Event Data:', eventData.returnValues);\\n}).on('error', console.error);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Unsubscribing from Events\",\r\n                \"example_code\": \"event.unsubscribe((error, success) => {\\n  if (error) {\\n    console.error('Unsubscribe Error:', error);\\n  } else if (success) {\\n    console.log('Unsubscribed from event');\\n  }\\n});\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Private Ethereum Networks\",\r\n        \"topic_description\": \"Developers often use private Ethereum networks for testing and development. Web3.js can connect to private networks.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Connecting to Private Network\",\r\n                \"example_code\": \"const web3 = new Web3('http://localhost:8545');\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Configuring Custom Network\",\r\n                \"example_code\": \"const customProvider = new Web3.providers.HttpProvider('http://localhost:8545');\\nconst web3 = new Web3(customProvider);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Managing Ethereum Accounts\",\r\n        \"topic_description\": \"Web3.js allows you to manage Ethereum accounts, including creating, importing, and exporting accounts.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating an Account\",\r\n                \"example_code\": \"const newAccount = web3.eth.accounts.create();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Importing an Account\",\r\n                \"example_code\": \"const privateKey = 'your-private-key';\\nconst importedAccount = web3.eth.accounts.privateKeyToAccount(privateKey);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Exporting an Account\",\r\n                \"example_code\": \"const account = web3.eth.accounts[0];\\nconst privateKey = account.privateKey;\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Ethereum Gas Price\",\r\n        \"topic_description\": \"Gas price determines the transaction cost on the Ethereum network. Web3.js provides methods to query and set gas prices.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Getting Current Gas Price\",\r\n                \"example_code\": \"web3.eth.getGasPrice()\\n  .then(gasPrice => console.log('Gas Price:', gasPrice));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Setting Custom Gas Price\",\r\n                \"example_code\": \"const customGasPrice = web3.utils.toWei('50', 'gwei');\\nconst txObject = {\\n  gasPrice: customGasPrice\\n};\\n\\nweb3.eth.sendTransaction(txObject);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Managing Ethereum Keys\",\r\n        \"topic_description\": \"Securely managing Ethereum keys is crucial. Web3.js can help with key generation and encryption.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Generating a Key Pair\",\r\n                \"example_code\": \"const keyPair = web3.eth.accounts.create();\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Encrypting Private Key\",\r\n                \"example_code\": \"const encryptedPrivateKey = web3.eth.accounts.encrypt(privateKey, password);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Decrypting Private Key\",\r\n                \"example_code\": \"const decryptedAccount = web3.eth.accounts.decrypt(encryptedAccount, password);\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Ethereum Contract Deployment\",\r\n        \"topic_description\": \"Web3.js allows you to deploy Ethereum smart contracts to the blockchain, specifying constructor arguments and gas limits.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Deploying a Contract\",\r\n                \"example_code\": \"const contract = new web3.eth.Contract(abi);\\n\\nconst deploy = contract.deploy({\\n  data: bytecode,\\n  arguments: [arg1, arg2]\\n});\\n\\ndeploy.send({\\n  from: senderAddress,\\n  gas: gasLimit\\n}).then(deployedContract => console.log('Contract Address:', deployedContract.options.address));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Ethereum Smart Contract Interaction\",\r\n        \"topic_description\": \"Web3.js enables interaction with Ethereum smart contracts, including calling functions and sending transactions.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Calling a Contract Function\",\r\n                \"example_code\": \"const contract = new web3.eth.Contract(abi, contractAddress);\\n\\ncontract.methods.myFunction(arg1, arg2).call()\\n  .then(result => console.log('Function Result:', result));\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Sending a Transaction to a Contract\",\r\n                \"example_code\": \"const contract = new web3.eth.Contract(abi, contractAddress);\\n\\ncontract.methods.myFunction(arg1, arg2).send({\\n  from: senderAddress,\\n  gas: gasLimit\\n}).then(receipt => console.log('Transaction Receipt:', receipt));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Managing Ethereum Transactions\",\r\n        \"topic_description\": \"Web3.js allows you to create and manage Ethereum transactions, including nonce management and transaction signing.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Creating a Transaction\",\r\n                \"example_code\": \"const txObject = {\\n  nonce: nonceValue,\\n  from: senderAddress,\\n  to: recipientAddress,\\n  value: web3.utils.toWei('1', 'ether'),\\n  gas: gasLimit,\\n  gasPrice: gasPrice\\n};\\n\\nweb3.eth.sendTransaction(txObject);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Signing a Transaction\",\r\n                \"example_code\": \"web3.eth.accounts.signTransaction(txObject, privateKey)\\n  .then(signedTx => web3.eth.sendSignedTransaction(signedTx.rawTransaction))\\n  .then(receipt => console.log('Transaction Receipt:', receipt));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Ethereum Wallet Integration\",\r\n        \"topic_description\": \"Web3.js can be integrated with Ethereum wallet providers like MetaMask for seamless user interaction.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"MetaMask Integration\",\r\n                \"example_code\": \"if (window.ethereum) {\\n  const web3 = new Web3(window.ethereum);\\n  try {\\n    // Request account access if needed\\n    await window.ethereum.enable();\\n  } catch (error) {\\n    // User denied account access\\n  }\\n}\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"WalletConnect Integration\",\r\n                \"example_code\": \"const web3 = new Web3(new Web3.providers.WalletConnectProvider({\\n  rpc: { 1: 'https://mainnet.infura.io/v3/your-infura-api-key' }\\n}));\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"topic_name\": \"Working with Ethereum Signatures\",\r\n        \"topic_description\": \"Web3.js allows you to sign and verify Ethereum messages and transactions using cryptographic signatures.\",\r\n        \"subtopics\": [\r\n            {\r\n                \"subtopic_name\": \"Signing a Message\",\r\n                \"example_code\": \"const message = 'Hello, Ethereum!';\\nconst signature = web3.eth.accounts.sign(message, privateKey);\\nconsole.log('Message Signature:', signature.signature);\"\r\n            },\r\n            {\r\n                \"subtopic_name\": \"Verifying a Signature\",\r\n                \"example_code\": \"const valid = web3.eth.accounts.recover(message, signature.signature) === signerAddress;\\nconsole.log('Signature Valid:', valid);\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default Web3jsCourseData;","D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Jquery\\JqueryCourse.jsx",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\CoursesFolder\\Jquery\\JqueryCourseData.js",[],[],"D:\\Projects\\educationWebsite\\education-website\\src\\NotFound404\\NotFound404.jsx",[],[],[],{"ruleId":"234","severity":1,"message":"235","line":34,"column":33,"nodeType":"236","endLine":34,"endColumn":68},{"ruleId":"234","severity":1,"message":"235","line":52,"column":33,"nodeType":"236","endLine":52,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":57,"column":33,"nodeType":"236","endLine":57,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":62,"column":33,"nodeType":"236","endLine":62,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":67,"column":33,"nodeType":"236","endLine":67,"endColumn":45},{"ruleId":"237","severity":1,"message":"238","line":156,"column":33,"nodeType":"239","messageId":"240","endLine":156,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":296,"column":33,"nodeType":"239","messageId":"240","endLine":296,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":8,"column":33,"nodeType":"239","messageId":"240","endLine":8,"endColumn":137},{"ruleId":"237","severity":1,"message":"238","line":98,"column":33,"nodeType":"239","messageId":"240","endLine":98,"endColumn":326},{"ruleId":"237","severity":1,"message":"238","line":254,"column":33,"nodeType":"239","messageId":"240","endLine":254,"endColumn":320},{"ruleId":"237","severity":1,"message":"238","line":434,"column":33,"nodeType":"239","messageId":"240","endLine":434,"endColumn":111},{"ruleId":"241","severity":1,"message":"242","line":142,"column":103,"nodeType":"239","messageId":"243","endLine":142,"endColumn":104,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"242","line":142,"column":139,"nodeType":"239","messageId":"243","endLine":142,"endColumn":140,"suggestions":"245"},{"ruleId":"237","severity":1,"message":"238","line":58,"column":33,"nodeType":"239","messageId":"240","endLine":58,"endColumn":231},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-useless-escape","Unnecessary escape character: \\`.","unnecessaryEscape",["246","247"],["248","249"],{"messageId":"250","fix":"251","desc":"252"},{"messageId":"253","fix":"254","desc":"255"},{"messageId":"250","fix":"256","desc":"252"},{"messageId":"253","fix":"257","desc":"255"},"removeEscape",{"range":"258","text":"259"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"260","text":"261"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"262","text":"259"},{"range":"263","text":"261"},[8356,8357],"",[8356,8356],"\\",[8392,8393],[8392,8392]]